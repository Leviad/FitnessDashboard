{"version":3,"file":"static/js/7457.6cad3a45.chunk.js","mappings":"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","sources":["UI/Btn/index.jsx","UI/Field/index.jsx","UI/Select/style.js","UI/Select/index.jsx","UI/TabNav/TabNavItem/index.jsx","UI/TabNav/index.jsx","UI/TabNav/style.js","components/Widget/WidgetBody/index.jsx","components/Widget/index.jsx","components/Widget/style.js","hooks/useNotistack.js","layout/Page/style.js","layout/Grid/index.jsx","layout/Page/index.jsx","widgets/UserSettings/style.js","components/DropFiles/index.jsx","UI/LabeledFormInput/index.jsx","components/MaskedInputs/Date/style.js","components/MaskedInputs/Date/index.jsx","components/MaskedInputs/Phone/index.jsx","widgets/UserSettings/Form/index.jsx","widgets/UserSettings/index.jsx","pages/Settings.jsx","styles/keyframes.js"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes, fonts, flex} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport {motion, AnimatePresence} from 'framer-motion';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  border-radius: 8px;\n  background-color: ${colors.blue};\n  color: #fff;\n  font-size: ${textSizes['14']};\n  font-family: ${fonts.accent};\n  height: 40px;\n  width: 100%;\n  display: flex;\n  ${flex.center};\n  gap: 8px;\n  line-height: 1;\n  transition: background-color var(--transition);\n  \n\n  &:hover, &:focus {\n    background-color: ${darken(0.1, colors.blue)};\n  }\n\n  &.success {\n    background-color: ${colors.success};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.success)};\n    }\n  }\n\n  &.error {\n    background-color: ${colors.error};\n\n    &:hover, &:focus {\n      background-color: ${darken(0.1, colors.error)};\n    }\n  }\n\n  &.disabled {\n    background-color: ${colors.gray};\n    pointer-events: none;\n  }\n`\n\nconst Btn = ({text, handler, type = 'button', isVisible = true, className, icon}) => {\n    return (\n        <AnimatePresence>\n            {\n                isVisible && (\n                    <Button as={motion.button}\n                            className={className ? className : ''}\n                            onClick={handler}\n                            type={type}\n                            initial={false}\n                            animate={{opacity: 1}}\n                            exit={{opacity: 0}}\n                            transition={{duration: .3}}>\n                        {icon && <i className={`icon icon-${icon}`} /> } {text}\n                    </Button>\n                )\n            }\n        </AnimatePresence>\n    )\n}\n\nBtn.propTypes = {\n    text: PropTypes.string.isRequired,\n    handler: PropTypes.func,\n    type: PropTypes.oneOf(['button', 'submit', 'reset']),\n    isVisible: PropTypes.bool,\n    className: PropTypes.string,\n    icon: PropTypes.string\n}\n\nexport default Btn;","// styling\nimport styled from 'styled-components/macro';\nimport {colors, dark, light, textSizes} from '@styles/vars';\nimport theme from 'styled-theming';\n\n// utils\nimport PropTypes from 'prop-types';\n\nexport const Input = styled.input`\n  height: 40px;\n  padding: 10px 16px;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  font-size: ${textSizes['14']};\n  ${theme('theme', {\n    light: `\n    background-color: ${light.highlight};\n   `,\n    dark: `\n    background-color: ${dark.highlight};\n   `\n  })};\n  transition: border-color var(--transition), box-shadow var(--transition);\n  \n  &.error {\n    border-color: ${colors.error};\n  }\n\n  &:hover {\n    box-shadow: ${theme('theme', {\n      light: `0 0 0 2px #A2C0D4`,\n      dark: `0 0 0 2px ${colors.dark}`\n    })};\n  }\n\n  &:focus {\n    box-shadow: 0 0 0 2px ${colors.blue};\n  }\n`\n\nconst Field = ({type = 'text', placeholder, value, handler, id, className}) => {\n    return <Input type={type}\n                  placeholder={placeholder}\n                  value={value}\n                  onChange={handler}\n                  id={id}\n                  className={className || ''}\n    />\n}\n\nField.propTypes = {\n    type: PropTypes.oneOf(['text', 'password', 'email', 'number', 'search']),\n    placeholder: PropTypes.string\n}\n\nexport default Field;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {textSizes, light, dark, colors, fonts, breakpoints} from '@styles/vars';\nimport {fadeIn} from '@styles/keyframes';\nimport Select from 'react-select';\n\nconst basicBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight,\n})\n\nconst basicColor = theme('theme', {\n    light: light.text,\n    dark: dark.text,\n})\n\nconst NormalizedSelect = styled(Select)`\n  .Select {\n    &__control {\n      cursor: pointer;\n      transition: var(--transition);\n      border: none;\n      background-color: ${basicBg};\n      border-radius: 8px;\n      font-size: ${textSizes['16']};\n      height: 40px;\n      padding-right: 16px;\n\n      &--is-focused, &:hover {\n        outline: none;\n      }\n\n      &--is-focused, &--is-focused:hover {\n        box-shadow: 0 0 0 2px ${colors.blue} !important;\n      }\n\n      &:hover {\n        box-shadow: ${theme('theme', {\n          light: `0 0 0 2px #A2C0D4`,\n          dark: `0 0 0 2px ${colors.dark}`\n        })};\n      }\n\n      .icon {\n        transition: .3s ease-in-out;\n        color: ${theme('theme', {\n          light: '#A2C0D4',\n          dark: colors.gray,\n        })};\n        font-size: ${textSizes['12']};\n      }\n    }\n\n    &__menu {\n      min-width: max-content;\n      width: 100%;\n      color: ${basicColor};\n      background-color: ${basicBg};\n      border-radius: 8px;\n      animation: ${fadeIn} var(--transition);\n      z-index: 100;\n\n      &-list {\n        max-height: 180px;\n        overflow-y: auto;\n        scroll-behavior: smooth;\n        z-index: 100;\n      }\n    }\n\n    &__indicator, &__indicator-separator {\n      display: none;\n    }\n\n    &__option {\n      cursor: pointer;\n      transition: var(--transition);\n\n      &:hover,\n      &--is-focused,\n      &--is-selected {\n        background: transparent;\n        color: ${colors.blue};\n      }\n    }\n\n    &__single-value {\n      color: ${theme('theme', {\n        light: light.text,\n        dark: dark.text,\n      })};\n    }\n  }\n`;\n\nexport const Basic = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      font-size: ${textSizes['14']};\n    }\n\n    &__input-container {\n      color: ${basicColor};\n    }\n\n    &__value-container {\n      padding: 0 16px;\n    }\n  }\n`;\n\nexport const Minimal = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      background-color: transparent;\n      width: fit-content;\n      font-weight: 500;\n      font-family: ${fonts.accent};\n      border-radius: 0;\n      height: unset;\n      padding: 0;\n      font-size: ${textSizes['18']};\n\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__value-container {\n      padding: 0 20px 0 0;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    .Select__control {\n      font-size: ${textSizes['20']};\n    }\n  }\n`;\n\nexport const User = styled(NormalizedSelect)`\n  .Select {\n    &__control {\n      &--is-focused, &:hover {\n        box-shadow: none !important;\n      }\n    }\n\n    &__input-container {\n      padding-left: 16px;\n      color: inherit;\n    }\n\n    &__value-container {\n      padding: 0 16px 0 0;\n    }\n\n    &__value-container,\n    &__option {\n      .user-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        color: inherit;\n      }\n    }\n  }\n`;","// styled components\nimport {Basic, Minimal, User} from './style';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {components} from 'react-select';\n\n// hooks\nimport {useEffect, useState} from 'react';\n\nconst CustomSelect = ({label, options, variant, value, changeHandler, placeholder}) => {\n    // automatically select the first option if no placeholder is provided\n    useEffect(() => {\n        if (!placeholder && value === null) {\n            changeHandler(options[0]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const [uniqueId] = useState(\n        () => 'select_' + Math.random().toFixed(5).slice(2),\n    );\n\n    const Control = ({children, ...props}) => (\n        <components.Control {...props}>\n            {children}\n            <i className={`icon icon-${variant === 'minimal' ? 'caret' : 'chevron'}-down`}></i>\n        </components.Control>\n    );\n\n    const commonProps = {\n        classNamePrefix: 'Select',\n        inputId: label,\n        isSearchable: variant !== 'user',\n        options: options,\n        value: value,\n        onChange: changeHandler,\n        placeholder: placeholder,\n        openMenuOnFocus: true,\n        components: {\n            Control: Control,\n            Menu: (props) => <components.Menu {...props} className=\"menu\">\n                {props.children}\n            </components.Menu>\n        },\n        id: uniqueId,\n        blurInputOnSelect: true,\n        className: `select-${variant}`\n    }\n\n    switch (variant) {\n        default:\n        case 'basic': {\n            return <Basic {...commonProps} />;\n        }\n        case 'minimal': {\n            return <Minimal {...commonProps} />;\n        }\n        case 'user': {\n            return <User {...commonProps} />;\n        }\n    }\n}\n\nCustomSelect.propTypes = {\n    options: PropTypes.any,\n    variant: PropTypes.oneOf(['minimal', 'basic', 'user']).isRequired,\n    value: PropTypes.any,\n    changeHandler: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default CustomSelect;","// styled components\nimport {Item, Button} from '../style'\n\n// components\nimport {Nav} from 'react-bootstrap';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst TabNavItem = ({className, eventKey, title, handler}) => {\n    return (\n        <Item className={className ? className : ''} as={Nav.Item} onClick={handler}>\n            <Button as={Nav.Link} eventKey={eventKey}>{title}</Button>\n        </Item>\n    )\n}\n\nTabNavItem.propTypes = {\n    eventKey: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func\n}\n\nexport default TabNavItem;","// styled components\nimport {Container} from './style';\n\n// components\nimport {Nav} from 'react-bootstrap';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst TabNav = ({children}) => {\n    return <Container as={Nav}>{children}</Container>\n}\n\nTabNav.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n}\n\nexport default TabNav;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {flex, textSizes, light, dark, colors} from '@styles/vars';\n\nconst current = theme('theme', {\n    light: light.bodyBg,\n    dark: light.text\n})\n\nexport const Container = styled.div`\n  width: 100%;\n  display: grid;\n  grid-auto-columns: minmax(0, 1fr);\n  grid-auto-flow: column;\n  grid-gap: 2px;\n  border-radius: 8px;\n  overflow: hidden;\n`\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 40px;\n  font-size: ${textSizes['14']};\n  text-transform: capitalize;\n  transition: background-color var(--transition);\n  ${theme('theme', {\n    light: `\n        color: ${colors.blue};\n        background-color: ${light.highlight};\n    `,\n    dark: `\n        color: ${colors.secondary};\n        background-color: ${dark.highlight};\n    `\n  })};\n  display: flex;\n  ${flex.center}\n  \n  &[aria-selected=\"true\"],\n  &.active,\n  &:hover, &:focus {\n    background-color: ${current};\n  }\n`\n\nexport const Item = styled.div`\n  &.active .nav-link {\n    background-color: ${current};\n  };\n`","// styled components\nimport {Body} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\n}\n\nWidgetBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    sidePadding: PropTypes.bool,\n    style: PropTypes.any,\n}\n\nexport default WidgetBody;","// styled components\nimport {Container} from './style';\n\n// components\nimport {motion} from 'framer-motion';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport {useInterfaceContext} from '@contexts/interfaceContext';\n\nconst Widget = ({name, children, style, shadow = false, ...props}) => {\n    const {direction} = useInterfaceContext();\n    return (\n        <Container as={motion.div}\n                   data-widget={name}\n                   initial={{opacity: 0}}\n                   whileInView={{opacity: 1}}\n                   transition={{duration: .4}}\n                   viewport={{once: true}}\n                   style={style}\n                   className={shadow ? 'shadow' : ''}\n                   dir={direction}\n                   mobile={props.mobile}\n        >\n            {children}\n        </Container>\n    )\n}\n\nWidget.propTypes = {\n    name: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    style: PropTypes.object,\n    shadow: PropTypes.bool\n}\n\nexport default Widget;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {flex, light, dark, colors, textSizes, effects, breakpoints} from '@styles/vars';\n\nconst bg = theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n})\n\nconst bar = theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n})\n\nconst borderShadow = theme('theme', {\n    light: light.shadow,\n    dark: dark.shadow\n})\n\nconst navBg = theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n})\n\nexport const Container = styled.div`\n  box-shadow: ${effects.widgetShadow};\n  border-radius: 10px;\n  position: relative;\n  background-color: ${bg};\n  overflow: hidden;\n  ${flex.col};\n  min-height: 182px;\n  flex-grow: 1;\n  ${props => props.mobile && `height: ${props.mobile}px`};\n  // iOS fix\n  transform: translate3d(0, 0, 0);\n  \n  &.shadow {\n    &:before, &:after {\n      display: block;\n    }\n  }\n\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    background: ${borderShadow};\n    height: 100%;\n    width: 24px;\n    z-index: 3;\n    filter: blur(1px);\n    display: none;\n  }\n\n  &:before {\n    left: -2px;\n    transform: ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\n  }\n\n  &:after {\n    right: -2px;\n    transform: rotate(180deg) ${props => props.dir === 'rtl' ? 'scaleX(-1)' : 'scaleX(1)'};\n  }\n  \n  ${breakpoints.tablet} {\n    height: 100%;\n  }\n`\n\nexport const Header = styled.div`\n  display: flex;\n  ${props => props.flex === 'column' ? `flex-direction: column;` : flex.between};\n  padding: ${props => !props.sidePadding ? '24px 24px 20px' : '24px 0 20px'};\n  flex-wrap: wrap;\n  gap: 20px 10px;\n  position: relative;\n  z-index: 10;\n\n  .title {\n    margin: ${props => props.sidePadding ? '0 24px' : '0'};\n    flex-shrink: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  \n  &.nav .title {\n    max-width: calc(100% - 60px);\n    display: block;\n  }\n`\n\nexport const HeaderWrapper = styled.div`\n  ${flex.col};\n  width: 100%;\n  margin: 0 20px;\n  gap: 20px;\n\n  .navigator {\n    background-color: ${navBg};\n  }\n`\n\nexport const Body = styled.div`\n  padding: ${props => !props.sidePadding ? '0 24px 24px' : '0 0 24px'};\n  height: ${props => props.height ? `calc(100% - ${props.height}px)` : '100%'};\n  overflow-y: auto;\n  overflow-x: hidden;\n  ${flex.col};\n  flex-grow: 1;\n`\n\nexport const Nav = styled.div`\n  font-size: ${textSizes['14']};\n  display: flex;\n  align-items: center;\n  color: ${colors.gray};\n  margin-right: -9px;\n\n  button {\n    opacity: 0.5;\n    transition: opacity var(--transition);\n    padding: 0 9px;\n\n    &:hover, &:focus {\n      opacity: 1;\n    }\n    \n    &.disabled {\n      visibility: hidden;\n      pointer-events: none;\n    }\n  }\n`\n\nexport const Navbar = styled.ul`\n  margin: 0 2px;\n  border-radius: 8px;\n  height: 40px;\n  padding-left: 22px;\n  display: flex;\n  align-items: center;\n  background-color: ${bar};\n  flex-grow: 1;\n`\n\nexport const Divider = styled.div`\n  height: 2px;\n  background-color: ${bar};\n  width: 100%;\n`","import {useSnackbar} from 'notistack';\nimport PropTypes from 'prop-types';\n\nconst useNotistack = (text, type = 'success') => {\n    const {enqueueSnackbar} = useSnackbar();\n    const notify = () => enqueueSnackbar(text, {variant: type});\n    return {notify};\n}\n\nuseNotistack.propTypes = {\n    text: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),\n}\n\nexport default useNotistack;","import styled from 'styled-components/macro';\nimport {breakpoints, flex} from '@styles/vars';\n\nexport const Content = styled.div`\n  padding: 20px 20px 84px;\n  flex-grow: 1;\n  height: auto;\n  width: 100%;\n  display: flex;\n  margin-top: var(--header-height);\n\n  ${breakpoints.tablet} {\n    padding: 20px 30px 30px;\n    ${flex.col};\n  }\n\n  ${breakpoints.laptopL} {\n    padding: 0;\n    margin-top: 0;\n  }\n\n  @media screen and (min-width: 1280px) and (min-height: 800px) {\n    overflow: hidden;\n  }\n`\nexport const ContentTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  gap: 18px;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 20px;\n  margin-bottom: 20px;\n\n  ${breakpoints.laptopL} {\n    margin-top: 40px;\n  }\n\n  ${breakpoints.desktop} {\n    flex-direction: row;\n    ${flex.between};\n  }\n`\n\nexport const Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  padding-right: 16px;\n`\n\nexport const Widgets = styled.div`\n  ${flex.col};\n  width: 100%;\n  flex-grow: 1;\n`","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport {Responsive, WidthProvider} from 'react-grid-layout';\nimport {withSize} from 'react-sizeme';\n\n// hooks\nimport {useInterfaceContext} from '@contexts/interfaceContext';\nimport {useDispatch} from 'react-redux';\nimport {updateLayout, saveToLocalStorage} from '@store/features/layout';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst ResponsiveGridLayout = withSize()(WidthProvider(Responsive));\n\nconst StaticGrid = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 24px;\n`;\n\nconst Grid = ({layouts, children, id, desktop}) => {\n    const {isLayoutEditable, fontScale} = useInterfaceContext();\n    const dispatch = useDispatch();\n    const isMobile = useWindowSize().width < 768;\n\n    const handleLayoutChange = (layouts) => {\n        if (isLayoutEditable) {\n            dispatch(updateLayout({id, layouts}));\n            dispatch(saveToLocalStorage());\n        }\n    }\n\n    return (\n        <>\n            {\n                isMobile ?\n                    <StaticGrid>{children}</StaticGrid>\n                    :\n                    <ResponsiveGridLayout className=\"content_layout\"\n                                          layouts={layouts}\n                                          breakpoints={{xl: 1026, lg: 1039, md: 708, sm: 0}}\n                                          cols={{xl: 3, lg: 3, md: 2, sm: 1}}\n                                          margin={[24, 24]}\n                                          isResizable={false}\n                                          rowHeight={fontScale === 1 ? 182 : 182 + (fontScale * 11)}\n                                          isDraggable={isLayoutEditable}\n                                          isBounded={true}\n                                          compactType=\"vertical\"\n                                          useCSSTransforms={false}\n                                          autoSize={true}\n                                          onLayoutChange={desktop ? handleLayoutChange : undefined}>\n                        {children}\n                    </ResponsiveGridLayout>\n            }\n        </>\n    )\n}\n\nexport default Grid;","// styled components\nimport {Content, ContentTitle, Controls, Wrapper, Widgets} from './style';\nimport {QtyBadge} from '@ui/Badge/style';\nimport {ControlWrapper} from '@components/GlobalSettingsControls/style';\n\n// components\nimport {Helmet} from 'react-helmet';\nimport {\n    ContrastControl,\n    FullscreenControl,\n    LayoutControl,\n    ScaleControl,\n    ThemeControl,\n    DirectionControl\n} from '@components/GlobalSettingsControls';\nimport Grid from '@layout/Grid';\nimport {motion} from 'framer-motion';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useWindowSize from '@hooks/useWindowSize';\nimport useMobileDetect from 'use-mobile-detect-hook';\nimport {useLocation} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {useRef, useEffect} from 'react';\n\nconst Page = ({title, children, hasBadge, hasTitle = true, qty}) => {\n    const pageRef = useRef(null);\n    const device = useMobileDetect();\n    const {width} = useWindowSize();\n    const isTablet = width > 767.98;\n\n    // get the current location from the router\n    const {pathname} = useLocation();\n    // detect if the current location is dashboard\n    const isDashboard = pathname.includes('dashboard');\n    // modify the path to get corresponding layout from the store\n    const layoutKey = pathname.replace('/', '');\n    const layouts = useSelector(state => state['layout'].layout);\n    const current = layouts[layoutKey];\n\n    useEffect(() => {\n        if (pageRef.current) {\n            pageRef.current.scrollTop = 0;\n        }\n    }, [pathname]);\n\n    return (\n        <Content ref={pageRef}>\n            <Helmet>\n                <title>{`MedUX | ${title}`}</title>\n            </Helmet>\n            <Widgets>\n                <Wrapper as={motion.div}\n                         initial={{opacity: 0}}\n                         whileInView={{opacity: 1}}\n                         transition={{duration: .4}}\n                         viewport={{once: true}}>\n                    {\n                        hasTitle && (\n                            <ContentTitle>\n                                {title} {hasBadge && qty && qty > 0 && <QtyBadge>+{qty}</QtyBadge>}\n                            </ContentTitle>\n                        )\n                    }\n                    {\n                        isTablet &&\n                        <Controls>\n                            {\n                                device.isDesktop() && (\n                                    <>\n                                        {\n                                            isDashboard && (\n                                                <ControlWrapper>\n                                                    <LayoutControl/>\n                                                </ControlWrapper>\n                                            )\n                                        }\n                                        <ControlWrapper>\n                                            <FullscreenControl/>\n                                        </ControlWrapper>\n                                    </>\n                                )\n                            }\n                            <ControlWrapper>\n                                <ContrastControl/>\n                            </ControlWrapper>\n                            <ControlWrapper>\n                                <ThemeControl/>\n                            </ControlWrapper>\n                            <ControlWrapper>\n                                <DirectionControl/>\n                            </ControlWrapper>\n                            <ControlWrapper>\n                                <ScaleControl/>\n                            </ControlWrapper>\n                        </Controls>\n                    }\n                </Wrapper>\n                {current ? <Grid id={layoutKey} layouts={current} desktop={device.isDesktop()}>{children}</Grid> : children}\n            </Widgets>\n        </Content>\n    )\n}\n\nPage.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    hasBadge: PropTypes.bool,\n    hasTitle: PropTypes.bool,\n    qty: PropTypes.number,\n}\n\nexport default Page;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {flex, light, dark, textSizes, breakpoints, colors} from '@styles/vars';\n\nexport const SettingsHeader = styled.div`\n  ${flex.col};\n  margin-bottom: 24px;\n  gap: 24px;\n\n  .wrapper {\n    padding: 24px 24px 0;\n\n    .title {\n      display: inline-block;\n      width: 100%;\n      margin-bottom: 20px;\n    }\n  }\n\n  ${breakpoints.landscapeS} {\n    .wrapper {\n      display: flex;\n      ${flex.between};\n\n      .title {\n        margin-bottom: 0;\n      }\n\n      .nav {\n        max-width: 300px;\n      }\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-gap: 24px;\n  margin-bottom: 24px;\n\n  ${breakpoints.landscapeS} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nexport const StyledForm = styled.form`\n  .dropzone {\n    border-radius: 50%;\n    aspect-ratio: 1 / 1;\n    width: 120px;\n    margin: 0 auto 24px;\n    background-color: ${theme('theme', {\n      light: light.highlight,\n      dark: dark.highlight\n    })};\n    ${flex.col};\n    ${flex.center};\n    font-size: ${textSizes['18']};\n    cursor: pointer;\n    border: 2px dashed transparent;\n    transition: border-color var(--transition);\n\n    .icon {\n      opacity: 0.5;\n    }\n\n    &:hover, &:focus, &.active {\n      border-color: ${theme('theme', {\n        light: colors.light_gray,\n        dark: colors.dark\n      })};\n    }\n\n    .hint {\n      display: none;\n    }\n  }\n\n  ${breakpoints.tablet} {\n    button[type='submit'] {\n      max-width: 200px;\n      margin: 0 auto;\n    }\n\n    .dropzone {\n      width: 200px;\n    }\n  }\n\n  ${breakpoints.laptopL} {\n    .wrapper {\n      display: grid;\n      grid-gap: 24px;\n      grid-template-columns: 350px minmax(0, calc(100% - 350px));\n    }\n\n    button[type='submit'] {\n      margin: 0 0 0 auto;\n    }\n\n    .dropzone {\n      width: 350px;\n      padding: 20px;\n      margin-bottom: 0;\n\n      .icon {\n        font-size: ${textSizes['32']};\n      }\n\n      .hint {\n        display: block;\n        margin-top: 20px;\n        font-size: ${textSizes['14']};\n        opacity: 0.5;\n        text-align: center;\n      }\n    }\n  }\n`;","// hooks\nimport {useDropzone} from 'react-dropzone';\nimport useNotistack from '@hooks/useNotistack';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst imgTypes = {\n    'image/jpeg': [],\n    'image/png': [],\n    'image/gif': [],\n    'image/bmp': [],\n    'image/webp': [],\n    'image/svg+xml': []\n}\n\nconst docTypes = {\n    'application/pdf': [],\n    'application/msword': [],\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': [],\n    'application/vnd.ms-excel': [],\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': []\n}\n\nconst DropFiles = ({type, multiple, children}) => {\n    const {notify} = useNotistack('File has been successfully uploaded.', 'success');\n    const handleDrop = () => notify();\n\n    const {\n        getRootProps,\n        getInputProps,\n        isDragActive\n    } = useDropzone({\n        accept: type === 'image' ? {...imgTypes} : {...docTypes},\n        multiple: multiple,\n        onDrop: handleDrop\n    });\n\n    return (\n        <div {...getRootProps()} className={isDragActive ? 'dropzone active' : 'dropzone'}>\n            <input {...getInputProps()} />\n            {children}\n        </div>\n    )\n}\n\nDropFiles.propTypes = {\n    type: PropTypes.oneOf(['image', 'doc']).isRequired,\n    multiple: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired\n}\n\nexport default DropFiles;","// styling\nimport styled from 'styled-components/macro';\nimport {flex, textSizes} from '@styles/vars';\n\n// components\nimport Field from '@ui/Field';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Wrapper = styled.div`\n  ${flex.col};\n`\n\nconst Label = styled.label`\n  font-size: ${textSizes['14']};\n  width: fit-content;\n  margin-bottom: 8px;\n`\n\nconst LabeledFormInput = ({id, title, type = 'text', placeholder, value = '', customInput}) => {\n    return (\n        <Wrapper>\n            <Label htmlFor={id}>{title}</Label>\n            {\n                customInput ?\n                    customInput\n                    :\n                    <Field type={type} defaultValue={value} id={id} placeholder={placeholder}/>\n            }\n        </Wrapper>\n    )\n}\n\nLabeledFormInput.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['text', 'password', 'email', 'number']),\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    customInput: PropTypes.element\n}\n\nexport default LabeledFormInput;","import styled from 'styled-components/macro';\nimport {colors} from '@styles/vars';\nimport theme from 'styled-theming';\n\nexport const DateInputWrapper = styled.div`\n  position: relative;\n  cursor: pointer;\n\n  input {\n    width: 100%;\n\n    &::placeholder {\n      text-transform: uppercase;\n    }\n  }\n\n  .icon {\n    position: absolute;\n    top: 50%;\n    right: 16px;\n    transform: translateY(-50%);\n    font-size: 14px;\n    color: ${theme('theme', {\n      light: '#A2C0D4',\n      dark: colors.gray,\n    })};\n    transition: color var(--transition);\n\n    &:hover, &:focus {\n      color: ${colors.blue};\n    }\n  }\n`;","// styled components\nimport {DateInputWrapper} from './style';\nimport {Input} from '@ui/Field';\n\n// components\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\n\n// utils\nimport {useRef, useState} from 'react';\n\nconst DateInput = ({id}) => {\n    const [value, setValue] = useState(null);\n    const [open, setOpen] = useState(false);\n    const today = new Date();\n    const customInputRef = useRef(null);\n    const buttonRef = useRef(null);\n\n    return (\n        <LocalizationProvider dateAdapter={AdapterMoment}>\n            <DatePicker\n                open={open}\n                value={value}\n                maxDate={today}\n                onChange={(newValue) => {\n                    setValue(newValue);\n                }}\n                onClose={() => setOpen(false)}\n                PopperProps={{anchorEl: customInputRef.current}}\n                PaperProps={{className: 'date-picker'}}\n                renderInput={({\n                                  ref,\n                                  inputProps,\n                                  disabled,\n                                  onChange,\n                                  value\n                              }) => (\n                    <DateInputWrapper ref={ref}>\n                        <Input\n                            id={id}\n                            value={value && value.toISOString()}\n                            onChange={onChange}\n                            disabled={disabled}\n                            ref={customInputRef}\n                            placeholder=\"MM/DD/YYYY\"\n                            {...inputProps}\n                            onClick={() => setOpen(true)}\n                        />\n                        <i className=\"icon icon-calendar\" ref={buttonRef} onClick={() => setOpen(true)}/>\n                    </DateInputWrapper>\n                )}\n            />\n        </LocalizationProvider>\n    )\n}\n\nexport default DateInput;","// components\nimport Field from '@ui/Field';\nimport {PatternFormat} from 'react-number-format';\n\nconst Phone = ({id, placeholder}) => {\n    return (\n        <Field as={PatternFormat} id={id} placeholder={placeholder} format=\"+1 (###) ### ## ##\"/>\n    );\n}\n\nexport default Phone;","// styled components\nimport {StyledForm, Container} from '@widgets/UserSettings/style';\nimport {Input} from '@ui/Field';\n\n// components\nimport DropFiles from '@components/DropFiles';\nimport Btn from '@ui/Btn';\nimport LabeledFormInput from '@ui/LabeledFormInput';\nimport CustomSelect from '@ui/Select';\nimport DateInput from '@components/MaskedInputs/Date';\nimport Phone from '@components/MaskedInputs/Phone';\n\n// utils\nimport PropTypes from 'prop-types';\nimport countryList from 'react-select-country-list';\nimport {City} from 'country-state-city';\n\n// hooks\nimport {useState} from 'react';\nimport useNotistack from '@hooks/useNotistack';\n\nconst Form = ({type}) => {\n    const {notify} = useNotistack('Your changes have been successfully saved.', 'success');\n    const hint = 'Drag image here or click to select file';\n\n    const [selectedCountry, setSelectedCountry] = useState();\n    const [selectedCity, setSelectedCity] = useState();\n    const [cities, setCities] = useState([]);\n\n    const getCountriesOptions = () => {\n        let countries = countryList().getData();\n        for (let i = 0; i < countries.length; i++) {\n            if (countries[i].value === 'RU') {\n                countries[i].label = 'Russia [terrorist state]';\n            }\n        }\n        return countries\n    }\n\n    const handleCountryChange = (country) => {\n        setSelectedCountry(country);\n        setSelectedCity(null);\n        let options = [];\n        const rawData = City.getCitiesOfCountry(country.value);\n        rawData.map(item => options.push({value: item.name, label: item.name}));\n        setCities(options);\n    }\n\n    return (\n        <StyledForm action=\"#\" method=\"post\" id={`settings_${type}`} onSubmit={e => e.preventDefault()}>\n            <div className=\"wrapper\">\n                <DropFiles multiple={false} type=\"image\">\n                    <i className=\"icon icon-image\" aria-label={hint} />\n                    <span className=\"hint\">{hint}</span>\n                </DropFiles>\n                <Container>\n                    <LabeledFormInput id={`${type}ProfileFirstName`} title=\"First Name\" placeholder=\"First Name\"/>\n                    <LabeledFormInput id={`${type}ProfileLastName`} title=\"Last Name\" placeholder=\"Last Name\"/>\n                    <LabeledFormInput id={`${type}ProfileProfileResidence`} title=\"Residence\" placeholder=\"Residence\" customInput={\n                        <CustomSelect label={`${type}ProfileProfileResidence`} placeholder=\"Residence\" options={getCountriesOptions()} value={selectedCountry}\n                                      variant=\"basic\" changeHandler={e => handleCountryChange(e)}/>\n                    }/>\n                    <LabeledFormInput id={`${type}ProfileCity`} title=\"City\" placeholder=\"City\" customInput={\n                        <CustomSelect label={`${type}ProfileCity`} placeholder=\"City\" options={cities} value={selectedCity}\n                                      variant=\"basic\" changeHandler={e => setSelectedCity(e)}/>\n                    }/>\n                    <LabeledFormInput id={`${type}ProfileStreet`} title=\"Street\" placeholder=\"Street\"/>\n                    <LabeledFormInput id={`${type}ProfileAddress1`} title=\"Address Line 1\" placeholder=\"Address Line 1\"/>\n                    <LabeledFormInput id={`${type}ProfileAddress2`} title=\"Address Line 2\" placeholder=\"Address Line 2\"/>\n                    <LabeledFormInput id={`${type}ProfileBirthday`} title=\"Birthday\" placeholder=\"Birthday\"\n                                      customInput={<Input as={DateInput} id={`${type}ProfileBirthday`} />}/>\n                    {\n                        type === 'patient' && <>\n                            <LabeledFormInput id=\"patientProfilePhone\" title=\"Phone\" placeholder=\"Phone\" customInput={\n                                <Phone id=\"patientProfilePhone\" placeholder=\"+1(000)-000-00-00\" />\n                            } />\n                            <LabeledFormInput id=\"patientProfileEmail\" title=\"Email\" placeholder=\"example@domain.com\"/>\n                        </>\n                    }\n                </Container>\n            </div>\n            <Btn text=\"Save\" handler={notify} type=\"submit\" />\n        </StyledForm>\n    )\n}\n\nForm.propTypes = {\n    type: PropTypes.oneOf(['patient', 'doctor']).isRequired\n}\n\nexport default Form;","// styled components\nimport {SettingsHeader} from '@widgets/UserSettings/style';\nimport {Divider} from '@components/Widget/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {Tab} from 'react-bootstrap'\nimport TabNav from '@ui/TabNav';\nimport TabNavItem from '@ui/TabNav/TabNavItem';\nimport Form from './Form';\n\nconst UserSettings = () => {\n    return (\n        <Widget name=\"UserSettings\">\n            <Tab.Container defaultActiveKey=\"patient\" transition={true}>\n                <SettingsHeader>\n                    <div className=\"wrapper\">\n                        <h2 className=\"title\">Your account</h2>\n                        <TabNav>\n                            <TabNavItem eventKey=\"patient\" title=\"Patient\" />\n                            <TabNavItem eventKey=\"doctor\" title=\"Doctor\" />\n                        </TabNav>\n                    </div>\n                    <Divider />\n                </SettingsHeader>\n                <WidgetBody>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"patient\">\n                            <Form type=\"patient\" />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"doctor\">\n                            <Form type=\"doctor\" />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </WidgetBody>\n            </Tab.Container>\n        </Widget>\n    )\n}\n\nexport default UserSettings;","// components\nimport Page from '@layout/Page';\nimport UserSettings from '@widgets/UserSettings';\n\nconst Settings = () => {\n    return (\n        <Page title=\"Settings\">\n            <UserSettings/>\n        </Page>\n    );\n}\n\nexport default Settings;","import {keyframes} from 'styled-components/macro';\n\nexport const pulse = keyframes`\n  from {\n    transform: scale(1);\n    transform-origin: center center;\n    animation-timing-function: linear;\n  }\n  10% {\n    transform: scale(0.91);\n    animation-timing-function: linear;\n  }\n  17% {\n    transform: scale(0.98);\n    animation-timing-function: linear;\n  }\n  33% {\n    transform: scale(0.87);\n    animation-timing-function: linear;\n  }\n  45% {\n    transform: scale(1);\n    animation-timing-function: linear;\n  }\n`\n\nexport const aura = keyframes`\n  0% {\n    opacity: 1;\n    transform: scale(0);\n  }\n  90% {\n    opacity: .3;\n  }\n  to {\n    opacity: .1;\n    transform: scale(1);\n  }\n`;\n\nexport const pen = keyframes`\n  0% {\n    transform: translateX(0);\n  }\n  50% {\n    transform: translateX(2px);\n  }\n  100% {\n    transform: translateX(0);\n  }\n`;\n\nexport const fadeIn = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(2px);\n  }\n    100% {\n    opacity: 1;\n    transform: translateY(0);\n    }\n`;\n\nexport const fadeOut = keyframes`\n  0% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n    100% {\n    opacity: 0;\n    transform: translateY(2rem);\n    }\n`;"],"names":["Button","styled","button","withConfig","componentId","colors","blue","textSizes","fonts","accent","flex","center","darken","success","error","gray","_ref","text","handler","_ref$type","type","_ref$isVisible","isVisible","className","icon","_jsx","AnimatePresence","children","_jsxs","as","motion","onClick","initial","animate","opacity","exit","transition","duration","concat","Input","input","theme","light","highlight","dark","placeholder","value","id","onChange","basicBg","basicColor","NormalizedSelect","Select","fadeIn","Basic","Minimal","breakpoints","tablet","User","label","options","variant","changeHandler","useEffect","_useState","useState","Math","random","toFixed","slice","uniqueId","_slicedToArray","commonProps","classNamePrefix","inputId","isSearchable","openMenuOnFocus","components","Control","_ref2","props","_objectWithoutProperties","_excluded","_objectSpread","Menu","blurInputOnSelect","eventKey","title","Item","Nav","Link","Container","current","bodyBg","div","secondary","style","_ref$sidePadding","sidePadding","elRef","Body","ref","name","_ref$shadow","shadow","direction","useInterfaceContext","whileInView","viewport","once","dir","mobile","bg","widgetBg","bar","borderShadow","navBg","effects","widgetShadow","col","Header","between","HeaderWrapper","height","Navbar","ul","Divider","useNotistack","arguments","length","undefined","enqueueSnackbar","useSnackbar","notify","propTypes","PropTypes","isRequired","Content","laptopL","ContentTitle","h1","Wrapper","desktop","Controls","Widgets","ResponsiveGridLayout","withSize","WidthProvider","Responsive","StaticGrid","layouts","_useInterfaceContext","isLayoutEditable","fontScale","dispatch","useDispatch","isMobile","useWindowSize","width","_Fragment","xl","lg","md","sm","cols","margin","isResizable","rowHeight","isDraggable","isBounded","compactType","useCSSTransforms","autoSize","onLayoutChange","updateLayout","saveToLocalStorage","hasBadge","_ref$hasTitle","hasTitle","qty","pageRef","useRef","device","useMobileDetect","isTablet","pathname","useLocation","isDashboard","includes","layoutKey","replace","useSelector","state","layout","scrollTop","Helmet","QtyBadge","isDesktop","ControlWrapper","LayoutControl","FullscreenControl","ContrastControl","ThemeControl","DirectionControl","ScaleControl","Grid","SettingsHeader","landscapeS","StyledForm","form","light_gray","imgTypes","docTypes","multiple","_useDropzone","useDropzone","accept","onDrop","getRootProps","getInputProps","isDragActive","Label","_ref$value","customInput","htmlFor","Field","defaultValue","DateInputWrapper","_useState2","setValue","_useState3","_useState4","open","setOpen","today","Date","customInputRef","buttonRef","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","maxDate","newValue","onClose","PopperProps","anchorEl","PaperProps","renderInput","inputProps","disabled","toISOString","PatternFormat","format","hint","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","_useState5","_useState6","cities","setCities","action","method","onSubmit","e","preventDefault","DropFiles","LabeledFormInput","CustomSelect","countries","countryList","getData","i","getCountriesOptions","country","City","getCitiesOfCountry","map","item","push","handleCountryChange","DateInput","Phone","Btn","Widget","Tab","defaultActiveKey","TabNav","TabNavItem","WidgetBody","Pane","Form","Page","UserSettings","pulse","keyframes","aura","pen"],"sourceRoot":""}