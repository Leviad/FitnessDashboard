{"version":3,"file":"static/js/5155.763dbbf1.chunk.js","mappings":"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","sources":["UI/ActionButton/index.jsx","assets/filledrating.svg","assets/emptyrating.svg","UI/CustomRating/index.jsx","UI/GroupSeparator/index.jsx","UI/Navigator/MonthNavigator/index.jsx","UI/Navigator/index.jsx","UI/Navigator/style.js","UI/Progress/index.jsx","UI/TabNav/style.js","components/GenderNav/index.jsx","components/PersonList/Item/style.js","UI/Reminder/index.jsx","components/PersonList/Item/index.jsx","components/PersonList/index.jsx","components/Widget/WidgetBody/index.jsx","constants/colors.js","hooks/useGenderFilter.js","widgets/PatientsList/style.js","widgets/PatientsList/Group/index.jsx","db/patients.js","widgets/PatientsList/index.jsx","pages/Patients.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {textSizes, light, colors, flex, breakpoints} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  display: flex;\n  ${flex.center};\n  gap: 8px;\n  border-radius: 20px;\n  font-size: ${textSizes['14']};\n  height: 40px;\n  width: 40px;\n  color: ${light.text};\n  transition: color var(--transition), background-color var(--transition);\n\n  .icon {\n    color: ${colors.gray};\n    transition: color var(--transition);\n  }\n\n  .text {\n    display: none;\n  }\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n\n    .icon {\n      color: #fff;\n    }\n  }\n\n  ${breakpoints.mobileL} {\n    width: fit-content;\n    padding: 0 16px;\n    .text {\n      display: block;\n    }\n  }\n`\n\nconst ActionButton = ({handler, user = 'doctor'}) => {\n    const options = {\n        icon: user === 'doctor' ? 'painmap' : 'plus-circle',\n        text: user === 'doctor' ? 'Case history' : 'Make an appointment',\n    }\n    return (\n        <Button className=\"btn-action\" onClick={handler}>\n            <i className={`icon icon-${options.icon}`}></i> <span className=\"text\">{options.text}</span>\n        </Button>\n    )\n}\n\nActionButton.propTypes = {\n    handler: PropTypes.func,\n    user: PropTypes.oneOf(['doctor', 'patient'])\n}\n\nexport default ActionButton;","var _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFilledrating(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 4,\n    rx: 2,\n    fill: \"currentColor\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilledrating);\nexport default __webpack_public_path__ + \"static/media/filledrating.b05f782e9c8b412bc85fc4fc2f9b270e.svg\";\nexport { ForwardRef as ReactComponent };","var _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEmptyrating(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 4,\n    viewBox: \"0 0 16 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0.5,\n    y: 0.5,\n    width: 15,\n    height: 3,\n    rx: 1.5,\n    stroke: \"currentColor\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEmptyrating);\nexport default __webpack_public_path__ + \"static/media/emptyrating.f10ffc344da26c79b6ff97ee1e9a3927.svg\";\nexport { ForwardRef as ReactComponent };","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport Rating from 'react-rating'\nimport {ReactComponent as Filled} from '@assets/filledrating.svg';\nimport {ReactComponent as Empty} from '@assets/emptyrating.svg';\n\n// hooks\nimport {useTheme} from '@mui/material/styles';\n\nconst StyledRating = styled(Rating)({\n    display: 'flex !important',\n    gap: 4,\n    marginTop: '-8px',\n    '& svg.empty': {\n        color: '#A2C0D4',\n    },\n    '& svg.filled': {\n        color: '#7ED321',\n    }\n});\n\nconst CustomRating = ({value}) => {\n    const direction = useTheme().direction;\n\n    return (\n        <StyledRating\n            className=\"styled-rating\"\n            initialRating={value}\n            direction={direction}\n            emptySymbol={<Empty className=\"empty\"/>}\n            fullSymbol={<Filled className=\"filled\"/>}\n            readonly />\n    )\n}\n\nexport default CustomRating;","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {effects, fonts, textSizes, dark, light} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Separator = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    border-bottom: ${theme('theme', {\n        light: effects.dashedLight,\n        dark: effects.dashedDark\n    })};\n    left: 0;\n    right: 0;\n    transform: translateY(-50%);\n    z-index: 1;\n  }\n`\n\nconst SeparatorText = styled.span`\n  text-transform: uppercase;\n  padding: 0 6px;\n  position: relative;\n  z-index: 2;\n  margin-left: 17px;\n  font-size: ${textSizes['10']};\n  font-weight: 500;\n  font-family: ${fonts.accent};\n  background-color: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n})\n`\n\nconst GroupSeparator = ({text}) => {\n    return (\n        <Separator className=\"separator\">\n            <SeparatorText>{text}</SeparatorText>\n        </Separator>\n    )\n}\n\nGroupSeparator.propTypes = {\n    text: PropTypes.string.isRequired\n}\n\nexport default GroupSeparator;","// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst MonthNavigator = ({state, handler, loop = true}) => {\n\n    const navigate = e => {\n        const direction = e.currentTarget.dataset.direction;\n        let current = state.number;\n\n        if (direction === 'prev') {\n            current !== 0 ? current-- : current = 11;\n        } else {\n            current !== 11 ? current++ : current = 0;\n        }\n        handler(prevState => {\n            return {...prevState, number: current}\n        });\n\n        let currentMonth = new Date().getMonth(),\n            prevMonth = currentMonth - 1,\n            nextMonth = currentMonth + 1;\n\n        let label = '';\n        const dateObj = new Date(2022, current, 1);\n\n        if (current === currentMonth) {\n            label = 'This month'\n        } else if (current === prevMonth) {\n            label = 'Previous month';\n        } else if (current === nextMonth) {\n            label = 'Next month';\n        } else {\n            label = dateObj.toLocaleString('en-US', {month: 'long'})\n        }\n        handler(prevState => {\n            return {...prevState, label: label}\n        });\n    }\n\n    return (\n        <Navigator handler={navigate}\n                   text={state.label}\n                   prevDisabled={!loop && state.number === 0}\n                   nextDisabled={!loop && state.number === new Date().getMonth()}\n        />\n    )\n}\n\nMonthNavigator.propTypes = {\n    state: PropTypes.shape(\n        {\n            number: PropTypes.number.isRequired,\n            label: PropTypes.string.isRequired\n        }).isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default MonthNavigator;","// styled components\nimport {Wrapper} from './style';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Navigator = ({text, handler, prevDisabled, nextDisabled, ...props}) => {\n    return (\n        <Wrapper className=\"navigator\" {...props}>\n            <button className={prevDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"prev\" aria-label=\"Previous\">\n                <i className=\"icon icon-chevron-left\"></i>\n            </button>\n            <span className=\"label\">{text}</span>\n            <button className={nextDisabled ? 'disabled' : ''} onClick={handler} data-direction=\"next\" aria-label=\"Next\">\n                <i className=\"icon icon-chevron-right\"></i>\n            </button>\n        </Wrapper>\n    )\n}\n\nNavigator.propTypes = {\n    text: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    prevDisabled: PropTypes.bool,\n    nextDisabled: PropTypes.bool\n}\n\nexport default Navigator;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, flex, light, textSizes} from '@styles/vars';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  ${flex.between};\n  height: 40px;\n  gap: 20px;\n  padding: 0 22px;\n  font-size: ${textSizes['14']};\n  border-radius: 8px;\n  background-color: ${theme('theme', {light: light.bodyBg, dark: dark.bodyBg})};\n\n  .label {\n    user-select: none;\n  }\n\n  button {\n    transition: opacity var(--transition);\n\n    &:hover, &:focus {\n      opacity: .8;\n    }\n\n    &.disabled {\n      pointer-events: none;\n      opacity: 0;\n    }\n  }\n`","// styling\nimport {dark, colors} from '@styles/vars';\n\n// components\nimport LinearProgress from '@mui/material/LinearProgress';\n\n// hooks\nimport {useTheme} from 'styled-components';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Progress = ({color = colors.blue, value, style = {}}) => {\n    const {theme} = useTheme();\n\n    return <LinearProgress className=\"progressbar\"\n                           variant=\"determinate\"\n                           aria-label={value}\n                           value={value}\n                           sx={{\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\n                               height: 6,\n                               borderRadius: 2,\n                               ...style,\n\n                               '& .MuiLinearProgress-bar': {\n                                   backgroundColor: color,\n                                   borderRadius: 2,\n                               }\n                           }}/>\n}\n\nProgress.propTypes = {\n    color: PropTypes.string,\n    value: PropTypes.number.isRequired,\n    style: PropTypes.object,\n}\n\nexport default Progress;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {flex, textSizes, light, dark, colors} from '@styles/vars';\n\nconst current = theme('theme', {\n    light: light.bodyBg,\n    dark: light.text\n})\n\nexport const Container = styled.div`\n  width: 100%;\n  display: grid;\n  grid-auto-columns: minmax(0, 1fr);\n  grid-auto-flow: column;\n  grid-gap: 2px;\n  border-radius: 8px;\n  overflow: hidden;\n`\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 40px;\n  font-size: ${textSizes['14']};\n  text-transform: capitalize;\n  transition: background-color var(--transition);\n  ${theme('theme', {\n    light: `\n        color: ${colors.blue};\n        background-color: ${light.highlight};\n    `,\n    dark: `\n        color: ${colors.secondary};\n        background-color: ${dark.highlight};\n    `\n  })};\n  display: flex;\n  ${flex.center}\n  \n  &[aria-selected=\"true\"],\n  &.active,\n  &:hover, &:focus {\n    background-color: ${current};\n  }\n`\n\nexport const Item = styled.div`\n  &.active .nav-link {\n    background-color: ${current};\n  };\n`","// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// utils\nimport {nanoid} from \"nanoid\";\nimport PropTypes from \"prop-types\";\n\nconst NavButton = ({state, filter, handler}) => {\n    const isActive = state.value === filter.value;\n    return (\n        <Button className={isActive ? 'active' : ''}\n                onClick={() => handler({value: filter.value, label: filter.label})}\n        >\n            {filter.label}\n        </Button>\n    )\n}\n\nconst GenderNav = ({state, handler}) => {\n    const options = [\n        {\n            value: 'all',\n            label: 'all'\n        },\n        {\n            value: 'male',\n            label: 'Men'\n        },\n        {\n            value: 'female',\n            label: 'Women'\n        }\n    ];\n\n    return (\n        <Container as=\"ul\" className=\"gender\">\n            {\n                options.map(item => {\n                    return (\n                        <Item key={nanoid(3)}>\n                            <NavButton state={state} filter={item} handler={handler} />\n                        </Item>\n                    )\n                })\n            }\n        </Container>\n    )\n}\n\nGenderNav.propTypes = {\n    state: PropTypes.object.isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default GenderNav;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, dark, breakpoints, flex, light, textSizes, fonts} from '@styles/vars';\n\nexport const Block = styled.div`\n  display: flex;\n  gap: 20px;\n\n  .main {\n    ${flex.col}\n    justify-content: space-between;\n\n    .name {\n      font-weight: 500;\n    }\n\n    .age {\n      font-size: ${textSizes['14']};\n    }\n  }\n\n  .wrapper {\n    flex-grow: 1;\n  }\n\n  @media screen and (min-width: 666.98px) {\n    flex-grow: 1;\n    &.actions {\n      justify-content: flex-end;\n    }\n\n    .wrapper {\n      flex-grow: unset;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  ${flex.col}\n  border-radius: 8px;\n  width: 100%;\n  padding: 20px;\n  gap: 20px 0;\n  background-color: ${theme('theme', {\n    light: light.highlight,\n    dark: dark.highlight\n  })};\n  transition: background-color var(--transition);\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${theme('theme', {\n      light: light.bodyBg,\n      dark: dark.bodyBg\n    })};\n  }\n  \n  .overview {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n\n  .main {\n    width: calc(100% - 40px);\n\n    .department {\n      font-size: ${textSizes['14']};\n      margin-top: 2px;\n    }\n  }\n\n  .rating, .booked {\n    ${flex.col};\n    gap: 7px;\n    font-size: ${textSizes['12']};\n    font-family: ${fonts.accent};\n  }\n  \n  .styled-rating {\n    margin-top: -5px;\n  }\n  \n  .contacts {\n    display: flex;\n    gap: 20px;\n  }\n\n  button {\n    transition: background-color var(--transition), color var(--transition);\n\n    &.booking {\n      font-size: ${textSizes['14']};\n      font-family: ${fonts.accent};\n      border-radius: 20px;\n      padding: 12px 16px;\n      color: ${theme('theme', {\n        light: colors.blue,\n        dark: '#fff'\n      })};\n      \n      &:hover, &:focus {\n        color: #fff;\n      }\n    }\n  }\n\n  button:not(.reminder) {\n    background-color: ${theme('theme', {\n      light: light.widgetBg,\n      dark: dark.widgetBg\n    })};\n\n    &:hover, &:focus {\n      background-color: ${colors.blue};\n    }\n  }\n\n  @media screen and (min-width: 666.98px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-end;\n\n    button.reminder {\n      order: 3;\n      width: 100%;\n    }\n    \n    &.doctor, &.staff {\n      justify-content: space-between;\n      ${Block} {\n        width: 100%;\n      }\n    }\n  }\n  \n  ${breakpoints.tablet} {\n    &.doctor .avatar {\n      width: 60px;\n    }\n  }\n\n  ${breakpoints.laptop} {\n    align-items: center;\n    gap: 20px;\n    button.reminder {\n      order: unset;\n      width: fit-content;\n    }\n\n    &.doctor, &.staff {\n      justify-content: space-between;\n      gap: 40px;\n      ${Block} {\n        width: fit-content;\n      }\n      \n      .overview {\n        gap: 40px;\n      }\n    }\n\n    ${Block} {\n      &.actions {\n        flex-grow: unset;\n      }\n    }\n  }\n  \n  ${breakpoints.desktop} {\n    .booked {\n      width: 275px;\n    }\n  }\n`;","// styling\nimport styled from 'styled-components/macro';\nimport {colors, flex, textSizes} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {colorTypes} from '@constants/colors';\n\nconst Wrapper = styled.button`\n  display: flex;\n  ${flex.center};\n  border-radius: 20px;\n  padding: 10px 16px;\n  color: #fff;\n  font-size: ${textSizes['14']};\n  gap: 10px;\n  background-color: ${props => colors[colorTypes.find(item => item.cat === props.reminder).color]};\n\n  span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n`\n\nconst Reminder = ({reminder, handler}) => {\n    const {text, type} = reminder;\n    return (\n        <Wrapper className=\"reminder\" onClick={handler} reminder={type}>\n            <i className=\"icon icon-clock\"></i>\n            <span>{text}</span>\n        </Wrapper>\n    )\n}\n\nReminder.propTypes = {\n    reminder: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired,\n    handler: PropTypes.func\n}\n\nexport default Reminder;","// styled components\nimport {Wrapper, Block} from './style';\n\n// components\nimport Avatar from '@ui/Avatar';\nimport ShapeButton from '@ui/ShapeButton';\nimport ActionButton from '@ui/ActionButton';\nimport Reminder from '@ui/Reminder';\nimport Progress from '@ui/Progress';\nimport CustomRating from '@ui/CustomRating';\nimport {motion, AnimatePresence} from 'framer-motion';\n\n// utils\nimport {fadePresence} from '@constants/framer';\nimport PropTypes from 'prop-types';\n\nconst Item = ({type, data}) => {\n    const {firstName, lastName, online, avatar} = data;\n\n    const Common = ({type}) => {\n        return (\n            <Block>\n                <Avatar avatar={avatar} alt={`${firstName} ${lastName}`} online={online}/>\n                <div className=\"main\">\n                    <span className=\"name\">{firstName} {lastName}</span>\n                    {\n                        type === 'patient' ?\n                            <span className=\"age\">{data.age} years</span>\n                            :\n                            <span className=\"department\">\n                                {data.department.map(item => item.label).join(', ')}\n                            </span>\n                    }\n                </div>\n            </Block>\n        )\n    }\n\n    const DoctorInfo = () => {\n        return (\n            <div className=\"overview\">\n                <div className=\"rating\">\n                    <span>Doctor rating</span>\n                    <CustomRating value={data.rating}/>\n                </div>\n                <div className=\"booked\">\n                    <span>Booked appointments</span>\n                    <Progress value={data.booked}/>\n                </div>\n            </div>\n        )\n    }\n\n    const Layout = () => {\n        switch (type) {\n            default:\n            case 'doctor':\n                return (\n                    <>\n                        <Common type={type}/>\n                        <DoctorInfo />\n                        <button className=\"booking\">Make an appointment</button>\n                    </>\n                )\n            case 'staff':\n                return (\n                    <>\n                        <Common type={type}/>\n                        <DoctorInfo />\n                        <div className=\"contacts\">\n                            <ShapeButton icon=\"comment-text\" shape=\"round\" label=\"Messages\"/>\n                            <ShapeButton icon=\"dots\" shape=\"round\" label=\"Menu\"/>\n                        </div>\n                    </>\n                )\n            case 'patient':\n                return (\n                    <>\n                        <Common type={type}/>\n                        {\n                            data.reminder ? <Reminder reminder={data.reminder}/> : null\n                        }\n                        <Block className=\"actions\">\n                            <div className=\"wrapper\">\n                                <ActionButton />\n                            </div>\n                            <ShapeButton icon=\"comment-text\" label=\"Message\" shape=\"round\"\n                                         hasNotification={data.message}/>\n                            <ShapeButton icon=\"phone\" label=\"Call\" shape=\"round\"/>\n                        </Block>\n                    </>\n                )\n        }\n    }\n\n    return (\n        <AnimatePresence>\n            <Wrapper className={type} as={motion.li} {...fadePresence}>\n                <Layout/>\n            </Wrapper>\n        </AnimatePresence>\n    )\n}\n\nItem.propTypes = {\n    type: PropTypes.string.isRequired,\n    data: PropTypes.any.isRequired\n}\n\nexport default Item;\n","// styling\nimport styled from 'styled-components/macro';\nimport {flex} from '@styles/vars';\n\n// components\nimport Item from '@components/PersonList/Item';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst List = styled.ul`\n  ${flex.col};\n  gap: 20px;\n  margin: 20px;\n`\n\nconst PersonList = ({arr, type, gender, deps}) => {\n    const {search, category} = deps ? deps : {search: '', category: ''};\n    return <List>{arr.map((item, i) => <Item key={`${item.id}-${gender}-${search}-${category}`} data={item} type={type}/>)}</List>\n}\n\nPersonList.propTypes = {\n    type: PropTypes.oneOf(['doctor', 'patient', 'staff']).isRequired,\n    arr: PropTypes.array.isRequired\n}\n\nexport default PersonList;","// styled components\nimport {Body} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\n}\n\nWidgetBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    sidePadding: PropTypes.bool,\n    style: PropTypes.any,\n}\n\nexport default WidgetBody;","export const colorTypes = [\n    {cat: 'emergency', label: 'Emergency', color: 'red'},\n    {cat: 'consultation', label: 'Consultation', color: 'azure'},\n    {cat: 'test', label: 'Examination', color: 'teal'},\n    {cat: 'checkup', label: 'Routine checkup', color: 'purple'},\n    {cat: 'sick', label: 'Sick visit', color: 'orange'},\n];\n\nexport const tasksColors = [\n    {cat: 'work', color: 'teal'},\n    {cat: 'travel', color: 'orange'},\n    {cat: 'family', color: 'azure'},\n    {cat: 'other', color: 'purple'}\n]","import {useState} from 'react';\n\nconst useGenderFilter = (targetArr) => {\n    const [gender, setGender] = useState({value: \"all\", label: \"all\"});\n    const genderArr = gender => {\n        return targetArr.filter(item => item.gender === gender.value);\n    }\n\n    return {\n        genderArr,\n        gender,\n        setGender\n    }\n}\n\nexport default useGenderFilter;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {dark, light, flex, colors, breakpoints} from '@styles/vars';\nimport {HeaderWrapper} from '@components/Widget/style';\n\nexport const NavWrapper = styled(HeaderWrapper)`\n  ${breakpoints.tablet} {\n    flex-direction: row;\n    ${flex.between};\n\n    .gender {\n      max-width: 300px;\n    }\n  }\n`;\n\nexport const LetterNav = styled.ul`\n  display: flex;\n  margin: 0 2px;\n  gap: 1px;\n  height: 80px;\n  align-items: center;\n  border-radius: 8px;\n  padding: 0 18px;\n  overflow-x: auto;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n`\n\nexport const LetterNavWrapper = styled.div`\n  overflow: hidden;\n  border-radius: 8px;\n  position: relative;\n  width: 100%;\n\n  &:before, &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    background: ${theme('theme', {\n      light: light.shadow,\n      dark: dark.shadowDarker\n    })};\n    height: 100%;\n    width: 24px;\n    z-index: 1;\n    filter: blur(1px);\n    display: block;\n  }\n\n  &:before {\n    left: 2px;\n  }\n\n  &:after {\n    right: 2px;\n    transform: scaleX(-1);\n  }\n`\n\nexport const LetterNavItem = styled.a`\n  display: flex;\n  ${flex.center};\n  width: 44px;\n  height: 40px;\n  text-transform: uppercase;\n  color: ${colors.blue};\n  border-radius: 8px;\n  background: ${theme('theme', {\n    light: light.widgetBg,\n    dark: dark.widgetBg\n  })};\n  transition: color var(--transition), background var(--transition);\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n\n  &:not(&.active) {\n    pointer-events: none;\n    background-color: transparent;\n    color: ${theme('theme', {\n      light: light.text,\n      dark: dark.text\n    })};\n  }\n`\n","// components\nimport GroupSeparator from '@ui/GroupSeparator';\nimport PersonList from '@components/PersonList';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Group = ({char, arr, type, gender}) => {\n    const data = arr.filter(item => item.lastName.charAt(0).toLowerCase() === char);\n\n    return (\n        <>\n            {\n                data.length !== 0 ?\n                    <div id={char}>\n                        <GroupSeparator text={char} />\n                        <PersonList arr={data} type={type} gender={gender} />\n                    </div> : null\n            }\n        </>\n    )\n}\n\nGroup.propTypes = {\n    char: PropTypes.string.isRequired,\n    arr: PropTypes.array.isRequired,\n    type: PropTypes.oneOf(['patient', 'doctor', 'staff']).isRequired,\n}\n\nexport default Group;","import pat1jpg from '@assets/avatars/pat1.jpg';\nimport pat1webp from '@assets/avatars/pat1.jpg?as=webp';\nimport pat2jpg from '@assets/avatars/pat2.jpg';\nimport pat2webp from '@assets/avatars/pat2.jpg?as=webp';\nimport pat3jpg from '@assets/avatars/pat3.jpg';\nimport pat3webp from '@assets/avatars/pat3.jpg?as=webp';\nimport pat4jpg from '@assets/avatars/pat4.jpg';\nimport pat4webp from '@assets/avatars/pat4.jpg?as=webp';\nimport pat5jpg from '@assets/avatars/pat5.jpg';\nimport pat5webp from '@assets/avatars/pat5.jpg?as=webp';\nimport pat6jpg from '@assets/avatars/pat6.jpg';\nimport pat6webp from '@assets/avatars/pat6.jpg?as=webp';\nimport pat7jpg from '@assets/avatars/pat7.jpg';\nimport pat7webp from '@assets/avatars/pat7.jpg?as=webp';\nimport pat9jpg from '@assets/avatars/pat9.jpg';\nimport pat9webp from '@assets/avatars/pat9.jpg?as=webp';\nimport pat10jpg from '@assets/avatars/pat10.jpg';\nimport pat10webp from '@assets/avatars/pat10.jpg?as=webp';\n\nexport const patients = [\n    {\n        id: 'YdnojZ',\n        firstName: 'Marta',\n        lastName: 'Addams',\n        gender: 'female',\n        age: 24,\n        reg: new Date(2022, 5, 11),\n        avatar: {\n            jpg: pat1jpg,\n            webp: pat1webp\n        }\n    },\n    {\n        id: 'Yd2nojT',\n        firstName: 'Mildred',\n        lastName: 'Collins',\n        gender: 'female',\n        age: 18,\n        reg: new Date(2022, 5, 21),\n        avatar: {\n            jpg: pat4jpg,\n            webp: pat4webp\n        }\n    },\n    {\n        id: 'Y32nojT',\n        firstName: 'Derek',\n        lastName: 'Osborn',\n        gender: 'male',\n        age: 35,\n        reg: new Date(2022, 2, 30),\n        avatar: {\n            jpg: pat2jpg,\n            webp: pat2webp\n        }\n    },\n    {\n        id: 'Yd2noBN',\n        firstName: 'Elisabeth',\n        lastName: 'Aron',\n        gender: 'female',\n        age: 21,\n        reg: new Date(2022, 2, 5),\n        avatar: {\n            jpg: pat10jpg,\n            webp: pat10webp\n        }\n    },\n    {\n        id: 'lP2noBN',\n        firstName: 'William',\n        lastName: 'Dove',\n        gender: 'male',\n        age: 49,\n        reg: new Date(2022, new Date().getMonth() - 1, 1),\n        online: true,\n        avatar: {\n            jpg: pat3jpg,\n            webp: pat3webp\n        }\n    },\n    {\n        id: 'l42noBX',\n        firstName: 'John',\n        lastName: 'Farewell',\n        gender: 'male',\n        age: 37,\n        reg: new Date(2022, new Date().getMonth() - 1, 1),\n        avatar: {\n            jpg: pat5jpg,\n            webp: pat5webp\n        }\n    },\n    {\n        id: 'l411oBR',\n        firstName: 'Vanessa',\n        lastName: 'Bloom',\n        gender: 'female',\n        age: 24,\n        reg: new Date(2022, new Date().getMonth() - 1, 1),\n        online: true,\n        avatar: {\n            jpg: pat9jpg,\n            webp: pat9webp\n        }\n    },\n    {\n        id: 'x411oTT',\n        firstName: 'Melody',\n        lastName: 'Brick',\n        gender: 'female',\n        age: 19,\n        reg: new Date(),\n        avatar: {\n            jpg: pat6jpg,\n            webp: pat6webp\n        }\n    },\n    {\n        id: 'byTRoTT',\n        firstName: 'Louis',\n        lastName: 'Garner',\n        gender: 'male',\n        age: 41,\n        reg: new Date(),\n        message: true,\n        avatar: {\n            jpg: pat7jpg,\n            webp: pat7webp\n        }\n    },\n    {\n        id: '52OOoTT',\n        firstName: 'Marian',\n        lastName: 'Lou',\n        gender: 'female',\n        age: 35,\n        reg: new Date(),\n        avatar: {\n            jpg: pat10jpg,\n            webp: pat10webp\n        }\n    },\n    {\n        id: 'g5Y1oXc',\n        firstName: 'Mike',\n        lastName: 'Lawson',\n        gender: 'male',\n        age: 22,\n        reg: new Date(),\n        online: true,\n        avatar: {\n            jpg: pat3jpg,\n            webp: pat3webp\n        }\n    },\n    {\n        id: 'x4iomTT',\n        firstName: 'Sarah',\n        lastName: 'Bradley',\n        gender: 'female',\n        age: 57,\n        reg: new Date(),\n        online: true,\n        avatar: {\n            jpg: pat1jpg,\n            webp: pat1webp\n        }\n    },\n    {\n        id: 'lan1oRe',\n        firstName: 'Brian',\n        lastName: 'Bright',\n        gender: 'male',\n        age: 28,\n        reg: new Date(),\n        reminder: {\n            type: 'test',\n            text: 'Ultrasound in 3 days'\n        },\n        avatar: {\n            jpg: pat3jpg,\n            webp: pat3webp\n        }\n    },\n    {\n        id: 'bbg1oTT',\n        firstName: 'Bella',\n        lastName: 'Crowley',\n        gender: 'female',\n        age: 28,\n        reg: new Date(),\n        online: true,\n        message: true,\n        avatar: {\n            jpg: pat9jpg,\n            webp: pat9webp\n        }\n    },\n    {\n        id: 'la3orT',\n        firstName: 'Panam',\n        lastName: 'Palmer',\n        gender: 'female',\n        age: 28,\n        reg: new Date(),\n        online: true,\n        reminder: {\n            type: 'consultation',\n            text: 'Keeping pregnant in 4:22'\n        },\n        avatar: {\n            jpg: pat4jpg,\n            webp: pat4webp\n        }\n    },\n    {\n        id: 'x411Xlp',\n        firstName: 'Jason',\n        lastName: 'Ward',\n        gender: 'male',\n        age: 19,\n        reg: new Date(),\n        message: true,\n        avatar: {\n            jpg: pat5jpg,\n            webp: pat5webp\n        }\n    },\n    {\n        id: 'ma11oTr',\n        firstName: 'Crystal',\n        lastName: 'Zeng',\n        gender: 'female',\n        age: 29,\n        reg: new Date(),\n        online: true,\n        avatar: {\n            jpg: pat10jpg,\n            webp: pat10webp\n        }\n    },\n    {\n        id: 'sjiII4s',\n        firstName: 'Amanda',\n        lastName: 'Spencer',\n        gender: 'female',\n        age: 24,\n        reg: new Date(2022, new Date().getMonth() + 1, 1),\n        online: true,\n        avatar: {\n            jpg: pat1jpg,\n            webp: pat1webp\n        }\n    },\n    {\n        id: 'folz25x',\n        firstName: 'Richard',\n        lastName: 'Brown',\n        gender: 'male',\n        age: 57,\n        reg: new Date(2022, new Date().getMonth() + 1, 1),\n        message: true,\n        avatar: {\n            jpg: pat2jpg,\n            webp: pat2webp\n        }\n    },\n    {\n        id: 'ttr5YtB',\n        firstName: 'Hannah',\n        lastName: 'Rose',\n        gender: 'female',\n        age: 31,\n        reg: new Date(2022, new Date().getMonth() + 1, 1),\n        reminder: {\n            type: 'consultation',\n            text: 'Keeping pregnant in 4:22'\n        },\n        avatar: {\n            jpg: pat4jpg,\n            webp: pat4webp\n        }\n    },\n];","// styled components\nimport {Header} from '@components/Widget/style';\nimport {LetterNav, LetterNavWrapper, LetterNavItem, NavWrapper} from './style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport GenderNav from '@components/GenderNav';\nimport MonthNavigator from '@ui/Navigator/MonthNavigator';\nimport Group from './Group';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\n\n// utils\nimport {generateAlphabet} from '@utils/helpers';\nimport {nanoid} from 'nanoid';\n\n// hooks\nimport {useState, useRef, useEffect} from 'react';\nimport useGenderFilter from '@hooks/useGenderFilter';\n\n// data placeholder\nimport {patients} from '@db/patients';\n\nconst PatientsList = () => {\n    const contentRef = useRef(null);\n    // current filter by month\n    const [month, setMonth] = useState({label: 'This month', number: new Date().getMonth()});\n    const dateFilteredArr = patients.filter(item => item.reg.getMonth() === month.number);\n\n    // current filter by gender\n    const {gender, setGender, genderArr} = useGenderFilter(dateFilteredArr);\n\n    // generate an array containing alphabet\n    const alphabet = generateAlphabet();\n\n    const isCharInPatients = (char, arr) => {\n        let contains = false;\n        for (let i = 0; i < arr.length; i++) {\n            const firstLetter = arr[i].lastName.charAt(0).toLowerCase();\n            if (firstLetter === char) {\n                contains = true;\n                break;\n            }\n        }\n        return contains\n    }\n\n    useEffect(() => {\n        contentRef.current?.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    }, [month, gender])\n\n    return (\n        <Widget name=\"PatientsList\">\n            <Header sidePadding={true}>\n                <NavWrapper>\n                    <GenderNav state={gender} handler={setGender}/>\n                    <MonthNavigator state={month} handler={setMonth}/>\n                </NavWrapper>\n                <LetterNavWrapper>\n                    <LetterNav>\n                        {\n                            alphabet.map(char => {\n                                return (\n                                    <li key={nanoid(3)}>\n                                        <LetterNavItem\n                                            className={isCharInPatients(char, gender.value === 'all' ? dateFilteredArr : genderArr(gender)) ? 'active' : ''}\n                                            href={`#${char}`}\n                                        >\n                                            {char}\n                                        </LetterNavItem>\n                                    </li>\n                                )\n                            })\n                        }\n                    </LetterNav>\n                </LetterNavWrapper>\n            </Header>\n            <WidgetBody style={{padding: 0}} elRef={contentRef}>\n                {\n                    dateFilteredArr.length !== 0 ?\n                        <>\n                            {\n                                alphabet.map(char => {\n                                    return <Group key={`patients-${char}`}\n                                                  gender={gender.value}\n                                                  char={char}\n                                                  type={'patient'}\n                                                  arr={gender.value === 'all' ? dateFilteredArr : genderArr(gender)}/>\n                                })\n                            }\n                        </>\n                        :\n                        <NoDataPlaceholder/>\n                }\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsList;","// components\nimport Page from '@layout/Page';\nimport PatientsList from '@widgets/PatientsList';\n\nconst Patients = () => {\n    return (\n        <Page title=\"Patients List\">\n            <PatientsList/>\n        </Page>\n    );\n}\n\nexport default Patients;"],"names":["Button","styled","button","withConfig","componentId","flex","center","textSizes","light","text","colors","gray","blue","breakpoints","mobileL","_ref","handler","_ref$user","user","options","icon","_jsxs","className","onClick","children","_jsx","concat","_rect","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFilledrating","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","rx","ForwardRef","SvgEmptyrating","x","y","stroke","StyledRating","Rating","display","gap","marginTop","color","value","direction","useTheme","initialRating","emptySymbol","Empty","fullSymbol","Filled","readonly","Separator","div","theme","effects","dashedLight","dark","dashedDark","SeparatorText","span","fonts","accent","widgetBg","state","_ref$loop","loop","Navigator","e","currentTarget","dataset","current","number","prevState","_objectSpread","currentMonth","Date","getMonth","prevMonth","nextMonth","label","dateObj","toLocaleString","month","prevDisabled","nextDisabled","Wrapper","between","bodyBg","_ref$color","_ref$style","style","LinearProgress","variant","sx","backgroundColor","highlight","borderRadius","Container","secondary","Item","NavButton","filter","isActive","_ref2","as","map","item","nanoid","Block","col","tablet","laptop","desktop","colorTypes","find","cat","reminder","type","data","firstName","lastName","online","avatar","Common","Avatar","alt","age","department","join","DoctorInfo","CustomRating","rating","Progress","booked","Layout","_Fragment","ShapeButton","shape","Reminder","ActionButton","hasNotification","message","AnimatePresence","motion","li","fadePresence","List","ul","arr","gender","deps","search","category","_ref$sidePadding","sidePadding","elRef","Body","tasksColors","targetArr","_useState","useState","_useState2","_slicedToArray","genderArr","setGender","NavWrapper","HeaderWrapper","LetterNav","LetterNavWrapper","shadow","shadowDarker","LetterNavItem","a","char","charAt","toLowerCase","GroupSeparator","PersonList","patients","reg","jpg","pat1jpg","webp","pat1webp","pat4jpg","pat4webp","pat2jpg","pat2webp","pat10jpg","pat10webp","pat3jpg","pat3webp","pat5jpg","pat5webp","pat9jpg","pat9webp","pat6jpg","pat6webp","pat7jpg","pat7webp","contentRef","useRef","setMonth","dateFilteredArr","_useGenderFilter","useGenderFilter","alphabet","generateAlphabet","isCharInPatients","contains","useEffect","_contentRef$current","scrollTo","top","behavior","Widget","name","Header","GenderNav","MonthNavigator","href","WidgetBody","padding","Group","NoDataPlaceholder","Page","PatientsList"],"sourceRoot":""}