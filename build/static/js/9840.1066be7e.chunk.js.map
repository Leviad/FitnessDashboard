{"version":3,"file":"static/js/9840.1066be7e.chunk.js","mappings":"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","sources":["UI/IconLink/index.jsx","UI/LabeledProgress/index.jsx","UI/Legend/LegendItem/index.jsx","UI/Legend/index.jsx","UI/Legend/style.js","UI/MenuDots/index.jsx","UI/Progress/index.jsx","UI/TabNav/style.js","UI/Timestamp/index.jsx","components/AppointmentItem/index.jsx","components/AppointmentItem/style.js","components/Chart/Tooltip/index.jsx","components/PeriodNav/index.jsx","hooks/useElementScroll.js","components/ScrollContainer/index.jsx","components/Truncated.jsx","components/Widget/WidgetBody/index.jsx","components/Widget/WidgetHeader/index.jsx","components/Widget/WidgetNav/index.jsx","db/appointments.js","hooks/useArrayNav.js","hooks/useContentHeight.js","hooks/usePeriodNav.js","widgets/NextPatient/style.js","widgets/NextPatient/index.jsx","widgets/LaboratoryTests/style.js","UI/Pill/index.jsx","widgets/LaboratoryTests/index.jsx","widgets/UpcomingAppointments/style.js","db/upcoming.js","widgets/UpcomingAppointments/index.jsx","widgets/DoctorOverallAppointment/index.jsx","widgets/PatientsPace/index.jsx","widgets/RecentQuestions/style.js","widgets/RecentQuestions/RecentQuestionsItem/index.jsx","widgets/RecentQuestions/index.jsx","pages/DashboardA.jsx","widgets/ConfirmedDiagnoses/List/style.js","widgets/ConfirmedDiagnoses/List/index.jsx","db/confirmed.js","widgets/ConfirmedDiagnoses/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, textSizes} from '@styles/vars';\nimport {darken} from 'polished';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Link = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  font-size: ${textSizes['14']};\n  color: ${colors.blue};\n  line-height: 1;\n  transition: color var(--transition);\n  width: fit-content;\n  \n  span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &:hover, &:focus {\n    color: ${darken(0.1, colors.blue)};\n  }\n\n  .icon {\n    font-size: ${textSizes['12']};\n    color: ${colors.gray};\n  }\n`\n\nconst IconLink = ({href = '#', title}) => {\n    return (\n        <Link href={href}>\n            <i className=\"icon icon-link\"></i>\n            <span>{title}</span>\n        </Link>\n    )\n}\n\nIconLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    href: PropTypes.string\n}\n\nexport default IconLink;","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport Progress from '@ui/Progress';\nimport {flex, textSizes} from '@styles/vars';\n\nconst ListItem = styled.li`\n  ${flex.col}\n  gap: 12px;\n  align-items: center;\n  .label {\n    font-size: ${textSizes['10']};\n    text-transform: uppercase;\n  }\n  \n  .progressbar {\n    height: ${props => props.barHeight}px;\n    width: 6px;\n    .MuiLinearProgress-bar {\n      transform: translateY(${props => 100 - props.value}%) !important;\n    }\n  }\n`\n\nconst LabeledProgress = ({label, value, barHeight = 75, color}) => {\n    return (\n        <ListItem value={value} barHeight={barHeight}>\n            <Progress value={value} color={color} />\n            <span className=\"label\">{label}</span>\n        </ListItem>\n    );\n}\n\nexport default LabeledProgress;","// styled components\nimport {ListItem} from '../style';\nimport {LegendBadge} from '@ui/Badge/style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LegendItem = ({color, legend}) => {\n    return (\n        <ListItem>\n            <LegendBadge color={color} /> {legend}\n        </ListItem>\n    )\n}\n\nLegendItem.propTypes = {\n    color: PropTypes.string.isRequired,\n    legend: PropTypes.string.isRequired\n}\n\nexport default LegendItem;","// styled components\nimport {List} from './style';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Legend = ({children, overlay}) => {\n    return <List overlay={overlay}>{children}</List>\n}\n\nLegend.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    overlay: PropTypes.bool,\n}\n\nexport default Legend;","import styled from 'styled-components/macro';\nimport {textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px 16px;\n  ${props => props.overlay && `\n    position: absolute;\n    bottom: 22px;\n    left: 24px\n  `}\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-transform: uppercase;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n`","// styling\nimport styled from 'styled-components/macro';\nimport {textSizes, light, colors} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  font-size: ${textSizes['16']};\n  color: ${light.text};\n  transition: color var(--transition);\n  line-height: 1;\n  \n  &:hover, &:focus {\n    color: ${colors.blue};\n  }\n`\n\nconst MenuDots = ({onClick, onFocus, onBlur}) => {\n    return (\n        <Button className=\"dots\" aria-label=\"Open menu\" onClick={onClick} onFocus={onFocus} onBlur={onBlur}>\n            <i className=\"icon-dots icon\"/>\n        </Button>\n    )\n}\n\nMenuDots.propTypes = {\n    onClick: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n}\n\nexport default MenuDots;","// styling\nimport {dark, colors} from '@styles/vars';\n\n// components\nimport LinearProgress from '@mui/material/LinearProgress';\n\n// hooks\nimport {useTheme} from 'styled-components';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Progress = ({color = colors.blue, value, style = {}}) => {\n    const {theme} = useTheme();\n\n    return <LinearProgress className=\"progressbar\"\n                           variant=\"determinate\"\n                           aria-label={value}\n                           value={value}\n                           sx={{\n                               backgroundColor: theme === 'light' ? '#E4EAF0' : dark.highlight,\n                               height: 6,\n                               borderRadius: 2,\n                               ...style,\n\n                               '& .MuiLinearProgress-bar': {\n                                   backgroundColor: color,\n                                   borderRadius: 2,\n                               }\n                           }}/>\n}\n\nProgress.propTypes = {\n    color: PropTypes.string,\n    value: PropTypes.number.isRequired,\n    style: PropTypes.object,\n}\n\nexport default Progress;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {flex, textSizes, light, dark, colors} from '@styles/vars';\n\nconst current = theme('theme', {\n    light: light.bodyBg,\n    dark: light.text\n})\n\nexport const Container = styled.div`\n  width: 100%;\n  display: grid;\n  grid-auto-columns: minmax(0, 1fr);\n  grid-auto-flow: column;\n  grid-gap: 2px;\n  border-radius: 8px;\n  overflow: hidden;\n`\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 40px;\n  font-size: ${textSizes['14']};\n  text-transform: capitalize;\n  transition: background-color var(--transition);\n  ${theme('theme', {\n    light: `\n        color: ${colors.blue};\n        background-color: ${light.highlight};\n    `,\n    dark: `\n        color: ${colors.secondary};\n        background-color: ${dark.highlight};\n    `\n  })};\n  display: flex;\n  ${flex.center}\n  \n  &[aria-selected=\"true\"],\n  &.active,\n  &:hover, &:focus {\n    background-color: ${current};\n  }\n`\n\nexport const Item = styled.div`\n  &.active .nav-link {\n    background-color: ${current};\n  };\n`","// styling\nimport styled from 'styled-components/macro';\nimport {fonts, textSizes} from '@styles/vars';\n\n// utils\nimport moment from 'moment';\n\nconst Wrapper = styled.span`\n  display: flex;\n  gap: 8px;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  text-transform: uppercase;\n`\n\nconst Timestamp = ({date, text, time = false}) => {\n    return (\n        <Wrapper>\n            {text && <span>{text}</span>}\n            <span>{moment(date).format('DD MMM YYYY')}</span>\n            {\n                time &&\n                <>\n                    <span>/</span>\n                    <span>{moment(date).format('hh:mm A')}</span>\n                </>\n            }\n        </Wrapper>\n    )\n}\n\nexport default Timestamp;","// styled components\nimport {ListItem, Main, Footer} from '@components/AppointmentItem/style';\n\n// components\nimport Avatar from '@ui/Avatar';\nimport Truncated from '@components/Truncated';\nimport ShapeButton from '@ui/ShapeButton';\nimport MenuDots from '@ui/MenuDots';\nimport {motion, AnimatePresence} from 'framer-motion';\nimport {Fragment} from 'react';\n\n// utils\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst AppointmentItem = ({variant = 'doctor', data, animated = false}) => {\n    const {patient, doctor, type, date, payment} = data;\n\n    const WrapperElement = animated ? AnimatePresence : Fragment;\n\n    const animationConfig = () => {\n        if (animated) {\n            return {\n                as: motion.div,\n                initial: {opacity: 0, y: 20},\n                animate: {opacity: 1, y: 0},\n                exit: {opacity: 0, y: 20},\n                transition: {duration: .5}\n            }\n        } else return {};\n    }\n\n    const footerContent = () => {\n        switch (variant) {\n            default:\n            case 'doctor':\n                return (\n                    <>\n                        <span className=\"details_item\">\n                            <i className=\"icon icon-clock\"/>\n                            <span>{moment(date).format('HH:mm')}</span>\n                        </span>\n                        {\n                            payment && <span className=\"details_item\">\n                            <i className=\"icon icon-euro\"/>\n                            <span>{payment.toFixed(2)}</span>\n                        </span>\n                        }\n                    </>\n                )\n            case 'patient':\n                return (\n                    <span className=\"details_item\">\n                        <i className=\"icon icon-clock\"/>\n                        <span>{moment(date).format('dddd, MMMM DD')}</span>\n                    </span>\n                )\n        }\n    }\n\n    return (\n        <WrapperElement>\n            <ListItem variant={variant} {...animationConfig()}>\n                <Main>\n                    <Avatar avatar={variant === 'patient' ? doctor.avatar : patient.avatar} alt={variant === 'patient' ? doctor.name : patient.name}/>\n                    <div className=\"info\">\n                        <Truncated className=\"name\" text={variant === 'patient' ? `Dr. ${doctor.name}` : patient.name}/>\n                        <Truncated className=\"title\" text={type}/>\n                    </div>\n                    {variant !== 'patient' && <ShapeButton shape=\"round\" label=\"Call\" icon=\"phone\"/>}\n                </Main>\n                <Footer variant={variant}>\n                    <div className=\"details\">\n                        {footerContent()}\n                    </div>\n                    <MenuDots/>\n                </Footer>\n            </ListItem>\n        </WrapperElement>\n    );\n}\n\nAppointmentItem.propTypes = {\n    variant: PropTypes.oneOf(['doctor', 'patient']),\n    data: PropTypes.object.isRequired,\n    animated: PropTypes.bool\n}\n\nexport default AppointmentItem;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming'\nimport {colors, effects, flex, textSizes} from '@styles/vars';\n\nexport const ListItem = styled.div`\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n    border-bottom: none;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Main = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 20px;\n\n  .info {\n    ${flex.col};\n    gap: 4px;\n    flex-grow: 1;\n\n    .name {\n      font-size: ${textSizes['14']};\n    }\n\n    .title {\n      font-weight: 500;\n    }\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  ${flex.between};\n  padding-top: 18px;\n  border-top: ${theme('theme', {\n      light: effects.dashedLight,\n        dark: effects.dashedDark,\n  })};\n\n  .swiper {\n    width: 50px;\n  }\n  \n  .details {\n    display: flex;\n    align-items: center;\n    gap: 30px;\n\n    &_item {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      font-size: ${props => props.variant === 'patient' && textSizes['14']};\n      font-weight: ${props => props.variant !== 'patient' && 500};\n\n      .icon {\n        color: ${colors.gray};\n        font-size: ${textSizes['16']};\n\n        &-euro {\n          font-size: ${textSizes['14']};\n        }\n      }\n    }\n  }\n`;","// styling\nimport styled from 'styled-components/macro';\nimport {light, textSizes, fonts, flex} from '@styles/vars';\n\nexport const StyledTooltip = styled.div`\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  color: #fff;\n  box-shadow: 0 1px 8px rgba(65, 77, 85, 0.4);\n  border-radius: 8px;\n  background-color: ${light.text};\n  height: 20px;\n  padding: 0 8px;\n  display: flex;\n  ${flex.center}\n  line-height: 1;\n  position: relative;\n  text-transform: uppercase;\n  \n  &.multiple {\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px;\n    height: auto;\n    \n    .item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      \n      .color {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n      }\n    }\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    bottom: -3px;\n    transform: translateX(-50%) rotate(-45deg);\n    width: 8px;\n    height: 8px;\n    background-color: ${light.text};\n    display: ${props => props.arrow ? 'block' : 'none'};\n  }\n`;\n\nconst ChartTooltip = ({active, payload, tooltip, arrow = false, multi = false, ...props}) => {\n    if (multi) {\n        if (!active || !tooltip) return null\n        for (const item of payload)\n            if (item.dataKey === tooltip)\n                return <StyledTooltip arrow={arrow}>{item.value}</StyledTooltip>\n        return null\n    } else {\n        if (!active || !payload[0]) return null\n        return (\n            <StyledTooltip arrow={arrow}> {payload[0].value} {props.right && payload[0].dataKey}</StyledTooltip>\n        )\n    }\n}\n\nexport default ChartTooltip;\n","// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\n\n// utils\nimport {nanoid} from 'nanoid';\n\nconst PeriodNav = ({current, handler}) => {\n    const {periods} = usePeriodNav();\n\n    return (\n        <Container>\n            {\n                periods.map(p =>\n                    <Item key={nanoid(4)}>\n                        <Button className={current === p && 'active'} onClick={() => handler(p)}>{p}</Button>\n                    </Item>\n                )\n            }\n        </Container>\n    )\n}\n\nexport default PeriodNav;","import {useEffect, useState} from 'react';\n\nconst useElementScroll = (ref, callback) => {\n    const [isOverflown, setIsOverflown] = useState(undefined);\n    const [contentHeight, setContentHeight] = useState(undefined);\n\n    const handleScroll = () => {\n        const { current } = ref;\n        current.children[0].scrollTop === 0 ? current.classList.add('is-top') : current.classList.remove('is-top');\n\n        const inScrolledToBottom = current.children[0].scrollHeight === (Math.ceil(current.children[0].scrollTop) + current.children[0].clientHeight) || current.children[0].scrollHeight === (Math.floor(current.children[0].scrollTop) + current.children[0].clientHeight);\n        inScrolledToBottom ? current.classList.add('is-bottom') : current.classList.remove('is-bottom');\n    }\n\n    useEffect(() => {\n        const { current } = ref;\n\n        const trigger = () => {\n            setContentHeight(current.children[0].scrollHeight);\n\n            const hasOverflow = current.children[0].scrollHeight > current.children[0].clientHeight;\n\n            setIsOverflown(hasOverflow);\n\n            current?.classList.toggle('has-overflow', hasOverflow);\n\n            current.children[0].addEventListener('scroll', handleScroll);\n\n            if (callback) callback(hasOverflow);\n        };\n\n        if (current) {\n\n            if ('ResizeObserver' in window) {\n                new ResizeObserver(trigger).observe(current);\n            }\n            trigger();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    } , [ref, callback, contentHeight]);\n\n    return isOverflown;\n}\n\nexport default useElementScroll;","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\n\n// hooks\nimport useElementScroll from '@hooks/useElementScroll';\nimport {useRef} from 'react';\n\nconst Scroller = styled.div`\n  height: calc(100% - ${props => props.height}px);\n  position: relative;\n  flex-grow: 1;\n\n  &.has-overflow {\n    &:before, &:after {\n      content: '';\n      display: block;\n      height: ${props => props.size === 'small' ? 40 : 80}px;\n      position: absolute;\n      width: 100%;;\n      background: ${theme('theme', {\n        light: 'linear-gradient(180deg, rgba(255, 255, 255, 0.0001) 0%, #FFFFFF 100%)',\n        dark: 'linear-gradient(180deg, rgba(23, 24, 25, 0.0001) 0%, #171819 100%)'\n      })};\n      left: 0;\n      z-index: 300;\n      transition: height var(--transition);\n    }\n\n    &:before {\n      top: 0;\n      transform: scaleY(-1);\n    }\n\n    &:after {\n      bottom: 0;\n    }\n\n    &.is-top:before,\n    &.is-bottom:after {\n      height: 0;\n    }\n  }\n\n  .track {\n    height: 100%;\n    overflow-y: auto;\n  }\n`;\n\nconst ScrollContainer = ({children, height, size}) => {\n    const ref = useRef(null);\n    const isOverflown = useElementScroll(ref);\n\n    return (\n        <Scroller className={isOverflown ? 'is-top has-overflow' : ''} height={height} ref={ref} size={size}>\n            {children}\n        </Scroller>\n    );\n}\n\nexport default ScrollContainer;","// components\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport responsiveHOC from 'react-lines-ellipsis/lib/responsiveHOC';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis);\n\nconst Truncated = ({className, text, lines = 1}) => {\n    return (\n        <ResponsiveEllipsis className={className} text={text} maxLine={lines} ellipsis=\"...\" trimRight basedOn=\"letters\" />\n    )\n}\n\nTruncated.propTypes = {\n    className: PropTypes.string,\n    text: PropTypes.string.isRequired,\n    lines: PropTypes.number\n}\n\nexport default Truncated;","// styled components\nimport {Body} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetBody = ({children, style, sidePadding = false, elRef, ...props}) => {\n    return <Body ref={elRef} sidePadding={sidePadding} style={style} {...props}>{children}</Body>\n}\n\nWidgetBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    sidePadding: PropTypes.bool,\n    style: PropTypes.any,\n}\n\nexport default WidgetBody;","// styled components\nimport {Header} from '../style';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst WidgetHeader = ({title, children, sidePadding = false, flex = 'row', elRef, ...props}) => {\n    return (\n        <Header className={props.className ? props.className : ''}\n                sidePadding={sidePadding} flex={flex} ref={elRef} style={props.style}>\n            <h2 className=\"title\">{title}</h2>\n            {children}\n        </Header>\n    )\n}\n\nWidgetHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    sidePadding: PropTypes.bool,\n    flex: PropTypes.oneOf(['row', 'column'])\n}\n\nexport default WidgetHeader;","// styled components\nimport {Nav} from '../style';\n\n// components\nimport WidgetHeader from '../WidgetHeader';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst WidgetNav = ({title, handler, sidePadding, children, disabled, ...props}) => {\n    return (\n        <WidgetHeader title={title} sidePadding={sidePadding} style={props.style} className=\"nav\">\n            <Nav>\n                <button onClick={handler} data-direction=\"prev\" className={disabled ? 'disabled' : ''} aria-label=\"Previous\">\n                    <i className=\"icon icon-chevron-left\"/>\n                </button>\n                <button onClick={handler} data-direction=\"next\" className={disabled ? 'disabled' : ''} aria-label=\"Next\">\n                    <i className=\"icon icon-chevron-right\"/>\n                </button>\n            </Nav>\n            {children}\n        </WidgetHeader>\n    )\n}\n\nWidgetNav.propTypes = {\n    title: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n}\n\nexport default WidgetNav;","import pat1jpg from '@assets/avatars/pat1.jpg';\nimport pat1webp from '@assets/avatars/pat1.jpg?as=webp';\nimport pat2jpg from '@assets/avatars/pat2.jpg';\nimport pat2webp from '@assets/avatars/pat2.jpg?as=webp';\nimport pat3jpg from '@assets/avatars/pat3.jpg';\nimport pat3webp from '@assets/avatars/pat3.jpg?as=webp';\nimport pat4jpg from '@assets/avatars/pat4.jpg';\nimport pat4webp from '@assets/avatars/pat4.jpg?as=webp';\nimport pat5jpg from '@assets/avatars/pat5.jpg';\nimport pat5webp from '@assets/avatars/pat5.jpg?as=webp';\nimport pat6jpg from '@assets/avatars/pat6.jpg';\nimport pat6webp from '@assets/avatars/pat6.jpg?as=webp';\nimport pat9jpg from '@assets/avatars/pat9.jpg';\nimport pat9webp from '@assets/avatars/pat9.jpg?as=webp';\n\nimport doc1jpg from '@assets/avatars/doc1.jpg';\nimport doc1webp from '@assets/avatars/doc1.jpg?as=webp';\nimport doc2jpg from '@assets/avatars/doc2.jpg';\nimport doc2webp from '@assets/avatars/doc2.jpg?as=webp';\nimport doc3jpg from '@assets/avatars/doc3.jpg';\nimport doc3webp from '@assets/avatars/doc3.jpg?as=webp';\n\nexport const appointments = [\n    {\n        id: 'smdIdn',\n        patient: {\n            name: 'Corey Aguilar',\n            avatar: {\n                jpg: pat1jpg,\n                webp: pat1webp\n            }\n        },\n        doctor: {\n            name: 'Shawn Hampton',\n            avatar: {\n                jpg: doc2jpg,\n                webp: doc2webp\n            }\n        },\n        type: 'Kidney function test',\n        payment: 24.5,\n        date: new Date(2022, 0, 1, 9, 0),\n        phone: '12456789',\n    },\n    {\n        id: 'sdPkoef34',\n        patient: {\n            name: 'Max Morales',\n            avatar: {\n                jpg: pat2jpg,\n                webp: pat2webp\n            }\n        },\n        doctor: {\n            name: 'Shawn Hampton',\n            avatar: {\n                jpg: doc2jpg,\n                webp: doc2webp\n            }\n        },\n        type: 'Emergency appointment',\n        payment: 99.95,\n        date: new Date(2022, 0, 1, 9, 30),\n        phone: '12456789',\n    },\n    {\n        id: 'sdplc5ER',\n        patient: {\n            name: 'Linda Adams',\n            avatar: {\n                jpg: pat4jpg,\n                webp: pat4webp\n            }\n        },\n        doctor: {\n            name: 'Jessie Paul',\n            avatar: {\n                jpg: doc1jpg,\n                webp: doc1webp\n            }\n        },\n        type: 'Complementation test',\n        payment: 40.45,\n        date: new Date(2022, 0, 1, 10, 30),\n        phone: '12456789',\n    },\n    {\n        id: 'ssamcwBER',\n        patient: {\n            name: 'Clyde Morales',\n            avatar: {\n                jpg: pat3jpg,\n                webp: pat3webp\n            }\n        },\n        doctor: {\n            name: 'Mabel Perkins',\n            avatar: {\n                jpg: doc3jpg,\n                webp: doc3webp\n            }\n        },\n        type: 'USG + Consultation',\n        payment: 29.9,\n        date: new Date(2022, 0, 1, 11, 30),\n        phone: '12456789',\n    },\n    {\n        id: 'pnvb6Rtv',\n        patient: {\n            name: 'Linda Smith',\n            avatar: {\n                jpg: pat6jpg,\n                webp: pat6webp\n            }\n        },\n        doctor: {\n            name: 'Shawn Hampton',\n            avatar: {\n                jpg: doc2jpg,\n                webp: doc2webp\n            }\n        },\n        type: 'Emergency appointment',\n        date: new Date(2022, 0, 1, 12, 30),\n        phone: '12456789',\n    },\n    {\n        id: 'sdsdtu9',\n        patient: {\n            name: 'Steeve Madden',\n            avatar: {\n                jpg: pat5jpg,\n                webp: pat5webp\n            }\n        },\n        doctor: {\n            name: 'Shawn Hampton',\n            avatar: {\n                jpg: doc2jpg,\n                webp: doc2webp\n            }\n        },\n        type: 'USG',\n        payment: 19.15,\n        date: new Date(2022, 0, 1, 14, 30),\n        phone: '12456789',\n    },\n    {\n        id: 'cd7xbwsvGFs',\n        patient: {\n            name: 'Corey Aguilar',\n            avatar: {\n                jpg: pat1jpg,\n                webp: pat1webp\n            }\n        },\n        doctor: {\n            name: 'Shawn Hampton',\n            avatar: {\n                jpg: doc2jpg,\n                webp: doc2webp\n            }\n        },\n        type: 'Kidney function test',\n        payment: 24.5,\n        date: new Date(2022, 6, 12, 9, 0),\n        phone: '12456789',\n    },\n    {\n        id: 'defbts78a',\n        patient: {\n            name: 'Max Morales',\n            avatar: {\n                jpg: pat2jpg,\n                webp: pat2webp\n            }\n        },\n        doctor: {\n            name: 'Shawn Hampton',\n            avatar: {\n                jpg: doc2jpg,\n                webp: doc2webp\n            }\n        },\n        type: 'Blood test',\n        payment: 99.95,\n        date: new Date(2022, 8, 5, 10, 30),\n        phone: '12456789',\n    },\n    {\n        id: 'smduBshba678',\n        patient: {\n            name: 'Marta Bloom',\n            avatar: {\n                jpg: pat9jpg,\n                webp: pat9webp\n            }\n        },\n        doctor: {\n            name: 'Jessie Paul',\n            avatar: {\n                jpg: doc1jpg,\n                webp: doc1webp\n            }\n        },\n        type: 'ECG',\n        date: new Date(2022, 1, 12, 11, 30),\n        phone: '12456789',\n    },\n]","import {useState} from 'react';\n\nconst useArrayNav = (array) => {\n    const [index, setIndex] = useState(0);\n    const navigate = e => {\n        const {direction} = e.currentTarget.dataset;\n        if (direction === 'next') {\n            index + 1 === array.length ? setIndex(0) : setIndex(index + 1);\n\n        } else if (direction === 'prev') {\n            index - 1 < 0 ? setIndex(array.length - 1) : setIndex(index - 1);\n        }\n    }\n\n    return {\n        index,\n        setIndex,\n        navigate\n    };\n}\n\nexport default useArrayNav;","import {useState, useEffect} from 'react';\n\nconst useContentHeight = (topRef, bottomRef) => {\n    const [contentHeight, setContentHeight] = useState(0);\n    useEffect(() => {\n         if (topRef !== null && bottomRef !== null) {\n             const topHeight = topRef.current ? topRef.current.clientHeight : 0;\n             const bottomHeight = bottomRef && bottomRef.current ? bottomRef.current.clientHeight : 0;\n             setContentHeight(topHeight + bottomHeight);\n         }\n    }, [topRef, bottomRef]);\n    return contentHeight;\n}\n\nexport default useContentHeight;","import {useState} from 'react';\n\nconst usePeriodNav = () => {\n    const periods = ['year', 'month', 'week'];\n    const [period, setPeriod] = useState(periods[0]);\n    const setPeriodIndex = (index) => setPeriod(periods[index]);\n\n    return {period, periods, setPeriod, setPeriodIndex};\n}\n\nexport default usePeriodNav;","import styled from 'styled-components/macro';\n\nexport const Main = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 20px;\n  \n  .swiper {\n    width: calc(100% - 60px);\n  }\n`;","// styled components\nimport {Main} from './style';\nimport {Main as SlideContent, Footer} from '@components/AppointmentItem/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport Avatar from '@ui/Avatar';\nimport ShapeButton from '@ui/ShapeButton';\nimport Truncated from '@components/Truncated';\nimport MenuDots from '@ui/MenuDots';\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport {EffectFade, Thumbs} from 'swiper';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport moment from 'moment';\n\n// hooks\nimport {useState, useEffect} from 'react';\nimport {useInterfaceContext} from '@contexts/interfaceContext';\n\n// data placeholder\nimport {appointments} from '@db/appointments';\n\nconst NextPatient = () => {\n    const [mainSwiper, setMainSwiper] = useState(null);\n    const [dateSwiper, setDateSwiper] = useState(null);\n    const {direction} = useInterfaceContext();\n\n    const config = {\n        effect: 'fade',\n        fadeEffect: {\n            crossFade: true\n        },\n        modules: [EffectFade, Thumbs],\n        loop: true,\n        dir: direction,\n        speed: 700\n    }\n\n    useEffect(() => {\n        if (mainSwiper && dateSwiper) {\n            mainSwiper.changeLanguageDirection(direction);\n            dateSwiper.changeLanguageDirection(direction);\n            mainSwiper.update();\n            dateSwiper.update();\n        }\n    }, [direction, mainSwiper, dateSwiper]);\n\n    const handleNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'next') {\n            mainSwiper.slideNext();\n        } else {\n            mainSwiper.slidePrev();\n        }\n    }\n\n    return (\n        <Widget name=\"NextPatient\">\n            <WidgetNav title=\"Next Patient\" handler={handleNavigation}/>\n            <WidgetBody style={{paddingBottom: 18}}>\n                <Main>\n                    <Swiper onSwiper={(swiper) => setMainSwiper(swiper)} thumbs={{swiper: dateSwiper}} {...config}>\n                        {\n                            appointments.map(data => {\n                                    const {patient, type} = data;\n                                    return (\n                                        <SwiperSlide key={nanoid(5)}>\n                                            <SlideContent style={{marginBottom: 0}}>\n                                                <Avatar avatar={patient.avatar} alt={patient.name}/>\n                                                <div className=\"info\">\n                                                    <Truncated className=\"name\" text={patient.name}/>\n                                                    <Truncated className=\"title\" text={type}/>\n                                                </div>\n                                            </SlideContent>\n                                        </SwiperSlide>\n                                    )\n                                }\n                            )\n                        }\n                    </Swiper>\n                    <ShapeButton shape=\"round\" label=\"Call\" icon=\"phone\"/>\n                </Main>\n                <Footer>\n                    <div className=\"details\">\n                        <span className=\"details_item\">\n                            <i className=\"icon icon-clock\"/>\n                            <Swiper onSwiper={(swiper) => setDateSwiper(swiper)}\n                                    watchSlidesProgress={true}\n                                    {...config}>\n                                {\n                                    appointments.map(data => {\n                                        const {date} = data;\n                                        return (\n                                            <SwiperSlide key={nanoid(5)}>\n                                                <p className=\"time\">{moment(date).format('HH:mm')}</p>\n                                            </SwiperSlide>\n                                        )\n                                    })\n                                }\n                            </Swiper>\n                        </span>\n                    </div>\n                    <MenuDots/>\n                </Footer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default NextPatient;","import styled from 'styled-components/macro';\nimport {flex} from '@styles/vars';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  ${flex.between}\n  gap: 12px;\n`\n\nexport const Main = styled.div`\n  gap: 6px;\n  display: flex;\n  align-items: flex-end;\n  .h3 {\n    max-width: 290px;\n  }\n`\n\nexport const Test = styled.div`\n  ${flex.col};\n  gap: 6px;\n`;\n\nexport const Footer = styled(Wrapper)`\n  margin-top: 16px;\n  gap: 0;\n  \n  .wrapper {\n    display: flex;\n    gap: 20px;\n  }\n`","// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, dark, flex, light, textSizes, fonts} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\nexport const Button = styled.button`\n  ${flex.center}\n  font-size: ${textSizes['12']};\n  padding: 4px 8px;\n  border-radius: 8px;\n  color: ${colors.blue};\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n  min-height: 20px;\n  gap: 4px;\n  color: ${colors.blue};\n  transition: color var(--transition), background-color var(--transition);\n  font-family: ${fonts.accent};\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n  }\n\n  &.active {\n    color: ${theme('theme', {\n      light: colors.blue,\n      dark: light.bodyBg\n    })};\n    background-color: ${theme('theme', {\n      light: light.highlight,\n      dark: light.text\n    })};\n  }\n`\n\nconst Pill = ({text, handler, icon, style, className}) => {\n    return (\n        <Button className={className ? `pill ${className}` : 'pill'} onClick={handler} style={style}>\n            {icon ? <i className={`icon-${icon}`}></i> : null} {text}\n        </Button>\n    )\n}\n\nPill.propTypes = {\n    text: PropTypes.string.isRequired,\n    handler: PropTypes.func,\n    icon: PropTypes.string,\n    style: PropTypes.object\n}\n\nexport default Pill;","// styled components\nimport {Wrapper, Main, Test, Footer} from './style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport IconLink from '@ui/IconLink';\nimport Pill from '@ui/Pill';\nimport MenuDots from '@ui/MenuDots';\nimport Truncated from '@components/Truncated';\nimport {SwiperSlide, Swiper} from 'swiper/react';\nimport {EffectFade} from 'swiper';\n\n// utils\nimport {nanoid} from 'nanoid';\n\n// hooks\nimport useWindowSize from '@hooks/useWindowSize';\nimport {useState, useEffect} from 'react';\nimport {useInterfaceContext} from '@contexts/interfaceContext';\n\nconst LaboratoryTests = () => {\n    const window = useWindowSize();\n    const {direction} = useInterfaceContext();\n    const [swiper, setSwiper] = useState(null);\n\n    const handleNav = e => {\n        const direction = e.currentTarget.dataset.direction;\n        if (direction === 'prev') {\n            swiper.slidePrev();\n        } else {\n            swiper.slideNext();\n        }\n    }\n\n    useEffect(() => {\n        if (swiper) {\n            swiper.changeLanguageDirection(direction);\n            swiper.update();\n        }\n    }, [direction, swiper]);\n\n    const data = [\n        {\n            name: 'Nelle Pearson',\n            test: 'Beta 2 Micro-globulin (B2M) Tumor Marker Test',\n        },\n        {\n            name: 'Kate Smith',\n            test: 'Natriuretic Peptide Tests (BNP, NT-proBNP)',\n        },\n        {\n            name: 'James Campbell',\n            test: 'Fetal Alcohol Spectrum Disorders (FASD) Screening',\n        },\n        {\n            name: 'Max Lewis',\n            test: 'Total Protein and Albumin/Globulin (A/G)',\n        },\n        {\n            name: 'Jessica Marble',\n            test: 'Antineutrophil Cytoplasmic Antibodies (ANCA) Test',\n        },\n        {\n            name: 'Kevin Doe',\n            test: 'Luteinizing Hormone (LH) Levels Blood Test',\n        }\n    ];\n\n    return (\n        <Widget name=\"LaboratoryTests\">\n            <WidgetNav title=\"Laboratory Tests\" handler={handleNav} style={{paddingBottom: 16}} />\n            <WidgetBody style={{paddingBottom: 18}}>\n                <Wrapper>\n                    <Swiper onSwiper={(swiper) => setSwiper(swiper)}\n                            modules={[EffectFade]}\n                            effect=\"fade\"\n                            fadeEffect={{crossFade: true}}\n                            dir={direction}\n                            loop>\n                        {\n                            data.map(item => {\n                                return (\n                                    <SwiperSlide key={nanoid(5)}>\n                                        <Test>\n                                            <IconLink title={item.name} />\n                                            <Main>\n                                                <Truncated className=\"h3\" text={item.test} lines={2} />\n                                            </Main>\n                                        </Test>\n                                    </SwiperSlide>\n                                )\n                            })\n                        }\n                    </Swiper>\n                    <MenuDots />\n                </Wrapper>\n                <Footer>\n                    <div className=\"wrapper\">\n                        <Pill text=\"Details\" />\n                        <Pill text={window.width < 413.98 ? \"Contacts\" : \"Contact patient\"} />\n                    </div>\n                    <Pill text=\"Archive\" icon=\"check\" />\n                </Footer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default LaboratoryTests;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, textSizes, light, dark, flex, effects} from '@styles/vars';\n\nexport const RangePickerWrapper = styled.div`\n  margin-top: -15px;\n\n  .row {\n    display: flex;\n    ${flex.between};\n    position: relative;\n    z-index: 1;\n\n    .display {\n      display: flex;\n      gap: 4px;\n      border-bottom: 1px dashed ${colors.blue};\n      padding-bottom: 2px;\n      color: ${colors.blue};\n      font-size: ${textSizes['14']};\n      cursor: pointer;\n      width: fit-content;\n    }\n  }\n\n  .ant-picker {\n    &-suffix, &-separator, &-input {\n      display: none;\n    }\n\n    &-range-wrapper {\n      min-width: unset !important;\n      max-width: 100%;\n      overflow: hidden;\n    }\n    \n    &-panel-container {\n      margin-left: 0 !important;\n    }\n\n    &-panels {\n      display: grid;\n      grid-template-columns: repeat(2, minmax(0, 1fr));\n      border-radius: 8px;\n      overflow: hidden;\n      margin: 10px;\n    }\n\n    &-month-panel {\n      background-color: ${theme('theme', {\n        light: light.bodyBg,\n        dark: dark.bodyBg,\n      })};\n      box-shadow: ${effects.widgetShadow};\n      padding-bottom: 10px;\n    }\n\n    &-header-view {\n      text-align: center;\n\n      button {\n        font-weight: 700;\n      }\n    }\n\n    &-content {\n      margin: -10px auto 0;\n      font-size: ${textSizes['14']};\n\n      td {\n        padding: 2px;\n        cursor: pointer;\n\n        &.ant-picker-cell-range {\n          &-start, &-end {\n            color: ${colors.blue};\n          }\n        }\n      }\n    }\n  }\n`;","import moment from 'moment';\n\nimport pat1jpg from '@assets/avatars/pat1.jpg';\nimport pat1webp from '@assets/avatars/pat1.jpg?as=webp';\nimport pat2jpg from '@assets/avatars/pat2.jpg';\nimport pat2webp from '@assets/avatars/pat2.jpg?as=webp';\nimport pat3jpg from '@assets/avatars/pat3.jpg';\nimport pat3webp from '@assets/avatars/pat3.jpg?as=webp';\nimport pat4jpg from '@assets/avatars/pat4.jpg';\nimport pat4webp from '@assets/avatars/pat4.jpg?as=webp';\nimport pat5jpg from '@assets/avatars/pat5.jpg';\nimport pat5webp from '@assets/avatars/pat5.jpg?as=webp';\nimport pat6jpg from '@assets/avatars/pat6.jpg';\nimport pat6webp from '@assets/avatars/pat6.jpg?as=webp';\nimport pat9jpg from '@assets/avatars/pat9.jpg';\nimport pat9webp from '@assets/avatars/pat9.jpg?as=webp';\nimport pat10jpg from '@assets/avatars/pat10.jpg';\nimport pat10webp from '@assets/avatars/pat10.jpg?as=webp';\n\nexport const upcoming = [\n    {\n        id: 'qT0nHYC',\n        patient: {\n            name: 'Max Morales',\n            avatar: {\n                jpg: pat2jpg,\n                webp: pat2webp\n            }\n        },\n        type: 'USG + Consultation',\n        payment: 99.95,\n        date: moment().add(2, 'hours').add(30, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'Gldh1cZfcduM',\n        patient: {\n            name: 'Bertie Maxwell',\n            avatar: {\n                jpg: pat4jpg,\n                webp: pat4webp\n            }\n        },\n        type: 'Complementation test',\n        payment: 40.45,\n        date: moment().add(3, 'hours').add(15, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'F0q6BW9MPz',\n        patient: {\n            name: 'Clyde Morales',\n            avatar: {\n                jpg: pat3jpg,\n                webp: pat3webp\n            }\n        },\n        type: 'USG + Consultation',\n        payment: 29.9,\n        date: moment().add(2, 'hours').add(15, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'Oacx30fQL',\n        patient: {\n            name: 'Linda Smith',\n            avatar: {\n                jpg: pat9jpg,\n                webp: pat9webp\n            }\n        },\n        type: 'Emergency appointment',\n        date: moment().add(5, 'hours').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'FgzlrSx',\n        patient: {\n            name: 'Karolina Doe',\n            avatar: {\n                jpg: pat6jpg,\n                webp: pat6webp\n            }\n        },\n        type: 'USG',\n        payment: 19.15,\n        date: moment().add(1, 'hours').add(17, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'yl53HDa8v9yE',\n        patient: {\n            name: 'Corey Aguilar',\n            avatar: {\n                jpg: pat1jpg,\n                webp: pat1webp\n            }\n        },\n        type: 'Kidney function test',\n        payment: 24.5,\n        date: moment().add(4, 'hours').add(11, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'mdfbc2DJ',\n        patient: {\n            name: 'Max Morales',\n            avatar: {\n                jpg: pat2jpg,\n                webp: pat2webp\n            }\n        },\n        type: 'Blood test',\n        payment: 99.95,\n        date: moment().add(1, 'days').add(30, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'jTvHHD08',\n        patient: {\n            name: 'Marta Bloom',\n            avatar: {\n                jpg: pat1jpg,\n                webp: pat1webp\n            }\n        },\n        type: 'ECG',\n        date: moment().add(1, 'days').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'X8pXJg',\n        patient: {\n            name: 'Vincent Porter',\n            avatar: {\n                jpg: pat5jpg,\n                webp: pat5webp\n            }\n        },\n        type: 'Lactose intolerance test',\n        date: moment().add(1, 'days').add(2, 'hours').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'fIRF8kkDYwz',\n        patient: {\n            name: 'Julia Peters',\n            avatar: {\n                jpg: pat10jpg,\n                webp: pat10webp\n            }\n        },\n        type: 'Magnesium test',\n        date: moment().add(1, 'days').add(2, 'hours').add(30, 'minutes').toDate(),\n        phone: '12456789',\n        payment: 19.15,\n    },\n    {\n        id: 'krr28Myt6dX',\n        patient: {\n            name: 'Samantha Wilson',\n            avatar: {\n                jpg: pat4jpg,\n                webp: pat4webp\n            }\n        },\n        type: 'Family planning',\n        date: moment().add(1, 'days').add(3, 'hours').add(18, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'BSpQyZ',\n        patient: {\n            name: 'Robert Fox',\n            avatar: {\n                jpg: pat3jpg,\n                webp: pat3webp\n            }\n        },\n        type: 'Cardiovascular test',\n        date: moment().add(1, 'days').add(4, 'hours').add(23, 'minutes').toDate(),\n        phone: '12456789',\n    },\n    {\n        id: 'cPr0TSE',\n        patient: 'Milagros Maxwell',\n        type: 'Glucose test',\n        date: moment().subtract(1, 'days').toDate(),\n        phone: '12456789',\n        payment: 19.15,\n    },\n    {\n        id: '64iwM7',\n        patient: 'Joel Aguilar',\n        type: 'Flu',\n        date: moment().subtract(1, 'days').add(30, 'minutes').toDate(),\n        phone: '12456789',\n        payment: 29.44\n    },\n    {\n        id: 'kH4sUhXCUtt',\n        patient: 'Vivianna Peters',\n        type: 'Glaucoma',\n        date: moment().subtract(1, 'days').add(45, 'minutes').toDate(),\n        phone: '12456789',\n        payment: 198.90\n    },\n    {\n        id: 'FYytOgsLbom',\n        patient: 'Mike Wilson',\n        type: 'Allergy',\n        date: moment().subtract(1, 'days').add(1, 'hours').toDate(),\n        phone: '12456789',\n        avatar: {\n            jpg: pat2jpg,\n            webp: pat2webp\n        }\n    },\n    {\n        id: 'vgdnlrrM1x47',\n        patient: {\n            name: 'Robert Fox',\n            avatar: {\n                jpg: pat3jpg,\n                webp: pat3webp\n            }\n        },\n        type: 'Gluten intolerance test',\n        date: moment().subtract(1, 'days').add(3, 'hours').toDate(),\n        phone: '12456789',\n    },\n];","// styled components\nimport {RangePickerWrapper} from '@widgets/UpcomingAppointments/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport AppointmentItem from '@components/AppointmentItem';\nimport {AdapterMoment} from '@mui/x-date-pickers/AdapterMoment';\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\nimport NoDataPlaceholder from '@components/NoDataPlaceholder';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// utils\nimport moment from 'moment';\n\n// hooks\nimport {useState, useRef} from 'react';\nimport useContentHeight from '@hooks/useContentHeight';\n\n// data placeholder\nimport {upcoming} from '@db/upcoming';\n\nconst UpcomingAppointments = () => {\n    const [visible, setVisible] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(moment());\n    const anchorRef = useRef(null);\n    const headerRef = useRef(null);\n    const height = useContentHeight(headerRef);\n\n    const appointments = (date) => upcoming.filter(appointment => {\n        return moment(appointment.date).isSame(date, 'day');\n    }).sort((a, b) => {\n        return moment(a.date).diff(moment(b.date));\n    });\n\n    return (\n        <Widget name=\"UpcomingAppointments\" mobile={500}>\n            <WidgetHeader title=\"Upcoming appointments\" style={{paddingBottom: 19}} flex=\"column\" elRef={headerRef}>\n                <RangePickerWrapper>\n                    <div className=\"row\" ref={anchorRef}>\n                        <div className=\"display\" onClick={() => setVisible(true)}>\n                            <span>{selectedDate.format('MMMM DD, YYYY')}</span>\n                        </div>\n                    </div>\n                    <LocalizationProvider dateAdapter={AdapterMoment}>\n                        <DatePicker\n                            open={visible}\n                            value={selectedDate}\n                            onChange={(newValue) => {\n                                setSelectedDate(newValue);\n                                setVisible(false);\n                            }}\n                            PopperProps={{anchorEl: anchorRef.current}}\n                            PaperProps={{className: 'date-picker'}}\n                            onClose={() => setVisible(false)}\n                            disablePast={true}\n                            renderInput={({\n                                              ref,\n                                              inputProps,\n                                              disabled,\n                                              onChange,\n                                              value\n                                          }) => (\n                                <div className=\"input\" ref={ref}>\n                                    <input\n                                        value={value && value.toISOString()}\n                                        onChange={onChange}\n                                        disabled={disabled}\n                                        placeholder=\"MM/DD/YYYY\"\n                                        {...inputProps}\n                                        type=\"hidden\"\n                                    />\n                                </div>\n                            )}\n                            shouldDisableDate={(day) => {\n                                return appointments(day).length === 0;\n                            }}\n                        />\n                    </LocalizationProvider>\n                </RangePickerWrapper>\n            </WidgetHeader>\n            <WidgetBody>\n                <ScrollContainer height={height}>\n                    <div className=\"track\">\n                        {\n                            appointments(selectedDate).length > 0 ?\n                                appointments(selectedDate).map(appointment => (\n                                    <AppointmentItem key={appointment.id} data={appointment} animated={true}/>\n                                )) : <NoDataPlaceholder/>\n                        }\n                    </div>\n                </ScrollContainer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default UpcomingAppointments;","// styling\nimport styled from 'styled-components/macro';\nimport {colors} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport LabeledProgress from '@ui/LabeledProgress';\nimport ScrollContainer from 'react-indiana-drag-scroll';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useRef, useEffect} from 'react';\nimport {useTheme} from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n  overflow-x: scroll;\n  padding: 0 24px;\n  user-select: none;\n`\n\nconst DoctorOverallAppointment = () => {\n    const {theme} = useTheme();\n    const listRef = useRef(null);\n\n    const drawLabels = () => {\n        const labels = [];\n        for (let i = 0; i < data[index].length; i++) {\n            labels.push(`${8 + i}:00`);\n        }\n        return labels;\n    }\n\n    const data = [\n        [37, 12, 58, 20, 0, 10, 15, 44, 19, 68, 50],\n        [20, 55, 44, 31, 75, 0, 0, 59, 84, 20, 10],\n        [80, 50, 30, 60, 40, 20, 50, 65, 85, 0, 40]\n    ]\n\n    const {index, navigate} = useArrayNav(data);\n\n    useEffect(() => {\n        if (listRef.current) {\n            listRef.current.scrollTo(0, 0);\n        }\n    }, [index])\n\n    return (\n        <Widget name=\"DoctorOverallAppointment\" shadow={true}>\n            <WidgetNav title=\"Overall Appointment\" style={{paddingBottom: 17}} handler={navigate}/>\n            <WidgetBody sidePadding={true} style={{paddingBottom: 20}}>\n                <List innerRef={listRef} as={ScrollContainer} activationDistance={5} component=\"ul\">\n                    {\n                        data[index].map((item, i) => {\n                            return (\n                                <LabeledProgress\n                                    key={drawLabels()[i]}\n                                    label={drawLabels()[i]}\n                                    value={item}\n                                    color={theme === 'light' ? colors.azure : colors.blue}/>\n                            )\n                        })\n                    }\n                </List>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default DoctorOverallAppointment;","// components\nimport Widget from \"@components/Widget\";\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\nimport {Area, AreaChart, ResponsiveContainer, Tooltip} from 'recharts';\nimport ChartTooltip from '@components/Chart/Tooltip';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport {useState} from 'react';\n\nconst data = [\n    {\n        new: 400,\n        returned: 700,\n    },\n    {\n        new: 300,\n        returned: 540,\n    },\n    {\n        new: 645,\n        returned: 400,\n    },\n    {\n        new: 328,\n        returned: 590,\n    },\n    {\n        new: 500,\n        returned: 250,\n    },\n    {\n        new: 280,\n        returned: 440,\n    }\n]\n\nconst PatientsPace = () => {\n    const [tooltip, setTooltip] = useState(null)\n    const {theme} = useTheme();\n    const isMobile = window.matchMedia('(max-width: 767px)').matches;\n\n    return (\n        <Widget name=\"PatientsPace\" shadow={true}>\n            <WidgetHeader title=\"Patients pace\" />\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <ResponsiveContainer height={isMobile ? 116 : '100%'}>\n                    <AreaChart data={data} margin={false}>\n                        <defs>\n                            <linearGradient id=\"new\"\n                                            x1=\"374\"\n                                            y1=\"118\"\n                                            x2=\"374\"\n                                            y2=\"0.363342\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop offset=\"0.00548986\" stopColor=\"white\" stopOpacity={0.05}/>\n                                <stop offset=\"1\" stopColor=\"#7ED321\" stopOpacity={0.05}/>\n                            </linearGradient>\n                            <linearGradient id=\"returned\"\n                                            x1=\"315.382\"\n                                            y1=\"75.7344\"\n                                            x2=\"315.382\"\n                                            y2=\"2.03396\"\n                                            gradientUnits=\"userSpaceOnUse\"\n                            >\n                                <stop stopColor=\"#171819\" stopOpacity=\"0.01\"/>\n                                <stop offset=\"1\" stopColor=\"#29E7CD\" stopOpacity=\"0.7\"/>\n                            </linearGradient>\n                        </defs>\n                        <Area dataKey=\"new\"\n                              type=\"monotone\"\n                              stroke=\"#7ED321\"\n                              strokeWidth={3}\n                              fill={theme === 'dark' ? 'url(#new)' : 'none'}\n                              activeDot={{r: 4, fill: '#7ED321', stroke: '#7ED321', strokeWidth: 2}}\n                              onMouseOver={() => setTooltip('new')}\n                        />\n                        <Area dataKey=\"returned\"\n                              type=\"monotone\"\n                              stroke=\"#29E7CD\"\n                              strokeWidth={3}\n                              fill={theme === 'dark' ? 'url(#returned)' : 'none'}\n                              activeDot={{r: 4, fill: '#29E7CD', stroke: '#29E7CD', strokeWidth: 2}}\n                              onMouseOver={() => setTooltip('returned')}\n                        />\n                        <Tooltip cursor={false} content={<ChartTooltip tooltip={tooltip} multi={true} />} />\n                    </AreaChart>\n                </ResponsiveContainer>\n                <LegendList overlay={true}>\n                    <LegendItem color=\"green\" legend=\"New patients\" />\n                    <LegendItem color=\"teal\" legend=\"Returned patients\" />\n                </LegendList>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsPace;","import styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {effects, flex} from '@styles/vars';\n\nexport const List = styled.div`\n  ${flex.col};\n  gap: 20px;\n  height: 100%;\n  overflow-y: auto;\n  padding: 0 24px;\n`;\n\nexport const ListItem = styled.div`\n  padding-bottom: 20px;\n  &:not(:last-of-type) {\n    border-bottom: ${theme('theme', {\n      light: effects.dashedLight,\n      dark: effects.dashedDark,\n    })};\n  }\n  direction: ltr;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 24px;\n\n  ${flex.between}\n  .h3 {\n    max-width: 280px;\n    margin-top: 8px;\n    text-align: left;\n  }\n`\n\nexport const Footer = styled.div`\n  gap: 20px;\n  display: flex;\n  margin-top: 16px;\n`","// styled components\nimport {ListItem, Wrapper, Footer} from '../style';\n\n// components\nimport Pill from '@ui/Pill';\nimport ShapeButton from '@ui/ShapeButton';\nimport Truncated from '@components/Truncated';\nimport Timestamp from '@ui/Timestamp';\n\n// utils\nimport {motion, AnimatePresence} from \"framer-motion\"\nimport {fadePresence} from '@constants/framer';\n\nconst RecentQuestionsItem = ({date, text}) => {\n    return (\n        <AnimatePresence>\n            <ListItem as={motion.div} {...fadePresence} initial={{opacity: 0}}>\n                <div>\n                    <Timestamp date={date} time={true} />\n                    <Wrapper>\n                        <Truncated className=\"h3\" lines={2} text={text} />\n                        <ShapeButton shape=\"round\" icon=\"comment-text\" label=\"Messages\" />\n                    </Wrapper>\n                </div>\n                <Footer>\n                    <Pill text=\"Read more\" />\n                    <Pill text=\"Reply\" />\n                </Footer>\n            </ListItem>\n        </AnimatePresence>\n    )\n}\n\nexport default RecentQuestionsItem","// styling\nimport {textSizes, dark, fonts, colors, light} from '@styles/vars';\n\n// styled components0\nimport {List} from './style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport RecentQuestionsItem from './RecentQuestionsItem';\nimport SwipeableViews from 'react-swipeable-views';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport moment from 'moment';\n\n// hooks\nimport {useState, useEffect} from 'react';\nimport {useTheme} from '@mui/material/styles';\nimport {useTheme as getStyledTheme} from 'styled-components';\n\nconst RecentQuestions = () => {\n    const {theme} = getStyledTheme();\n    const options = ['all', 'unread', 'new'];\n    const [value, setValue] = useState(0);\n    const [transitionEnabled, setTransitionEnabled] = useState(false);\n    const dir = useTheme().direction;\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    }\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    }\n\n    useEffect(() => {\n        setValue(1);\n        setTimeout(() => {\n            setTransitionEnabled(true);\n        }, 1000);\n    }, []);\n\n    const data = [\n        {\n            id: 'abc123',\n            label: 'unread',\n            date: moment(),\n            text: 'Addiction blood bank bone marrow contagious?'\n        },\n        {\n            id: 'abc124',\n            label: 'new',\n            date: moment().subtract(1, 'days').subtract(1, 'hours').toDate(),\n            text: 'Triggered asthma anesthesia bone marrow?'\n        },\n        {\n            id: 'abc125',\n            label: 'unread',\n            date: moment().subtract(5, 'days').subtract(2, 'hours').subtract(30, 'minutes').toDate(),\n            text: 'Lorem ipsum dolor sit amet, consectetur?'\n        },\n        {\n            id: 'abc126',\n            label: 'new',\n            date: moment().subtract(10, 'days').subtract(5, 'hours').subtract(10, 'minutes').toDate(),\n            text: 'Sed do eiusmod tempor incididunt ut labore et?'\n        }\n    ]\n\n    return (\n        <Widget name=\"RecentQuestions\" mobile={388}>\n            <WidgetHeader title=\"Recent Questions\" flex=\"column\">\n                <Tabs value={value}\n                      onChange={handleChange}\n                      style={{margin: '0 -22px'}}\n                      sx={{\n                          padding: '0 22px',\n                          borderRadius: '8px',\n                          display: 'flex',\n                          alignItems: 'center',\n                          '& .MuiTabs-indicator': {\n                              display: 'none'\n                          },\n                          '& .MuiTabs-flexContainer': {\n                              gap: '8px',\n                              alignItems: 'center'\n                          },\n                          '& .MuiTab-root': {\n                              padding: '4px 8px',\n                              borderRadius: '8px',\n                              fontSize: textSizes['12'],\n                              minHeight: '20px',\n                              minWidth: 'auto',\n                              lineHeight: '1',\n                              textTransform: 'capitalize',\n                              fontFamily: fonts.accent,\n                              color: colors.blue,\n                              fontWeight: 400,\n                              transition: 'background-color var(--transition), color var(--transition)',\n                          },\n                          '& .MuiTab-root:hover, & .Mui-selected': {\n                                backgroundColor: theme === 'dark' ? light.text : light.widgetBg,\n                                color: theme === 'dark' && '#fff !important'\n                          },\n                          minHeight: '40px',\n                          backgroundColor: theme === 'dark' && dark.highlight\n                      }}\n                >\n                    {\n                        options.map((option) => (\n                            <Tab key={nanoid()} label={option}/>\n                        ))\n                    }\n                </Tabs>\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0}}>\n                <SwipeableViews index={value} onChangeIndex={handleChangeIndex} animateTransitions={transitionEnabled}>\n                    {\n                        options.map((option, index) => (\n                            <List key={option}>\n                                {\n                                    value === 0 ?\n                                        data.map(item => <RecentQuestionsItem key={item.id} dir={dir} date={item.date} text={item.text}/>)\n                                        :\n                                        data.filter(item => item.label === option).map(item => <RecentQuestionsItem\n                                            key={item.id} dir={dir} date={item.date} text={item.text}/>)\n                                }\n                            </List>\n                        ))\n                    }\n                </SwipeableViews>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default RecentQuestions;","// components\nimport Page from '@layout/Page';\nimport NextPatient from '@widgets/NextPatient';\nimport LaboratoryTests from '@widgets/LaboratoryTests';\nimport UpcomingAppointments from '@widgets/UpcomingAppointments';\nimport DoctorOverallAppointment from '@widgets/DoctorOverallAppointment';\nimport PatientsPace from '@widgets/PatientsPace';\nimport RecentQuestions from '@widgets/RecentQuestions';\nimport ConfirmedDiagnoses from '@widgets/ConfirmedDiagnoses';\n\nconst DashboardA = () => {\n    return (\n        <Page title=\"Basic Doctor Dashboard\">\n            <div key=\"next-patient\">\n                <NextPatient/>\n            </div>\n            <div key=\"laboratory-tests\">\n                <LaboratoryTests/>\n            </div>\n            <div key=\"doctor-upcoming-appointments\">\n                <UpcomingAppointments/>\n            </div>\n            <div key=\"doctor-overall-appointment\">\n                <DoctorOverallAppointment/>\n            </div>\n            <div key=\"patients-pace\">\n                <PatientsPace/>\n            </div>\n            <div key=\"recent-questions\">\n                <RecentQuestions/>\n            </div>\n            <div key=\"confirmed-diagnoses\">\n                <ConfirmedDiagnoses nav=\"tabs\"/>\n            </div>\n        </Page>\n    )\n}\n\nexport default DashboardA;","import styled from 'styled-components/macro';\nimport {flex, textSizes, fonts} from '@styles/vars';\n\nexport const List = styled.ul`\n  gap: 22px;\n  margin-top: 20px;\n  ${flex.col}\n`\n\nexport const Block = styled.div`\n  display: flex;\n  ${flex.between}\n  margin-bottom: 7px;\n  font-size: ${textSizes['14']};\n`\n\nexport const Text = styled.div`\n  display: flex;\n  gap: 4px;\n  font-family: ${fonts.accent};\n  \n  .num {\n    font-weight: 500;\n  }\n  & + .label {\n    text-transform: capitalize;\n  }\n`","// styled components\nimport {List, Block, Text} from \"./style\";\n\n// components\nimport Progress from '@ui/Progress';\n\n// utils\nimport PropTypes from 'prop-types';\nimport {confirmedPalette} from '@styles/vars';\n\nconst ListItem = ({data, period}) => {\n    const {label} = data;\n    const progress = data[period].progress,\n        goal = data[period].goal;\n    const normalise = value => (value / (goal / 100));\n\n    return (\n        <li>\n            <Block>\n                <Text>\n                    <span className=\"num\">{progress}</span> of\n                    <span className=\"num\">{goal}</span>\n                </Text>\n                <span className=\"label\">{label}</span>\n            </Block>\n            <div className=\"confirmed_list-item_visualizer\">\n                <Progress color={confirmedPalette[label]} value={normalise(progress)} />\n            </div>\n        </li>\n    )\n}\n\nconst ConfirmedDiagnosesList = ({data, period, short = false}) => {\n    return (\n        <List>\n            {\n                data.map(item => {\n                    const {label} = item;\n                    if (short && label === 'diabetes') return null;\n                    else {\n                        return (\n                            <ListItem key={label} data={item} period={period} />\n                        )\n                    }\n                })\n            }\n        </List>\n    )\n}\n\nConfirmedDiagnosesList.propTypes = {\n    data: PropTypes.array.isRequired,\n    short: PropTypes.bool\n}\n\nexport default ConfirmedDiagnosesList;","export const confirmed = [\n    {\n        label: \"cold\",\n        year: {\n            progress: 648,\n            goal: 751\n        },\n        month: {\n            progress: 53,\n            goal: 104\n        },\n        week: {\n            progress: 18,\n            goal: 36\n        }\n    },\n    {\n        label: \"fracture\",\n        year: {\n            progress: 215,\n            goal: 651\n        },\n        month: {\n            progress: 90,\n            goal: 142\n        },\n        week: {\n            progress: 13,\n            goal: 58\n        }\n    },\n    {\n        label: \"concussion\",\n        year: {\n            progress: 84,\n            goal: 120\n        },\n        month: {\n            progress: 31,\n            goal: 87\n        },\n        week: {\n            progress: 11,\n            goal: 43\n        }\n    },\n    {\n        label: \"hepatitis\",\n        year: {\n            progress: 804,\n            goal: 846\n        },\n        month: {\n            progress: 358,\n            goal: 501\n        },\n        week: {\n            progress: 182,\n            goal: 330\n        }\n    },\n    {\n        label: \"dermatitis\",\n        year: {\n            progress: 458,\n            goal: 901\n        },\n        month: {\n            progress: 215,\n            goal: 354\n        },\n        week: {\n            progress: 130,\n            goal: 261\n        }\n    },\n    {\n        label: \"diabetes\",\n        year: {\n            progress: 302,\n            goal: 514\n        },\n        month: {\n            progress: 187,\n            goal: 298\n        },\n        week: {\n            progress: 74,\n            goal: 105\n        }\n    }\n]","// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ConfirmedDiagnosesList from '@widgets/ConfirmedDiagnoses/List';\nimport PeriodNav from '@components/PeriodNav';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport usePeriodNav from '@hooks/usePeriodNav';\nimport useArrayNav from '@hooks/useArrayNav';\n\n// data placeholder\nimport {confirmed} from '@db/confirmed';\n\nconst ConfirmedDiagnoses = ({nav}) => {\n    const {period, periods, setPeriod} = usePeriodNav();\n    const {index, navigate} = useArrayNav(periods);\n\n    return (\n        <Widget name=\"ConfirmedDiagnosesTabs\">\n            {\n                nav === 'tabs' ?\n                    <WidgetHeader title=\"Confirmed Diagnoses\" style={{paddingBottom: 16}}/>\n                    :\n                    <WidgetNav title=\"Confirmed Diagnoses\" handler={navigate} style={{paddingBottom: 8}}/>\n            }\n            <WidgetBody style={{paddingBottom: 26}}>\n                {\n                    nav === 'tabs' && <PeriodNav current={period} handler={setPeriod}/>\n                }\n                <ConfirmedDiagnosesList short={nav === 'tabs'}\n                                        period={nav === 'tabs' ? period : periods[index]}\n                                        data={confirmed}/>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nConfirmedDiagnoses.propTypes = {\n    nav: PropTypes.oneOf(['arrows', 'tabs']).isRequired\n}\n\nexport default ConfirmedDiagnoses;"],"names":["Link","styled","a","withConfig","componentId","textSizes","colors","blue","darken","gray","_ref","_ref$href","href","title","_jsxs","children","_jsx","className","ListItem","li","flex","col","props","barHeight","value","label","_ref$barHeight","color","Progress","legend","LegendBadge","overlay","List","ul","fonts","accent","Button","button","light","text","onClick","onFocus","onBlur","_ref$color","_ref$style","style","theme","useTheme","LinearProgress","variant","sx","_objectSpread","backgroundColor","dark","highlight","height","borderRadius","current","bodyBg","Container","div","concat","secondary","center","Item","Wrapper","span","date","_ref$time","time","moment","format","_Fragment","_ref$variant","data","_ref$animated","animated","patient","doctor","type","payment","WrapperElement","AnimatePresence","Fragment","as","motion","initial","opacity","y","animate","exit","transition","duration","Main","Avatar","avatar","alt","name","Truncated","ShapeButton","shape","icon","Footer","toFixed","footerContent","MenuDots","between","effects","dashedLight","dashedDark","_excluded","StyledTooltip","arrow","active","payload","tooltip","_ref$arrow","_ref$multi","multi","_objectWithoutProperties","_step","_iterator","_createForOfIteratorHelper","s","n","done","item","dataKey","err","e","f","right","handler","periods","usePeriodNav","map","p","nanoid","ref","callback","_useState","useState","undefined","_useState2","_slicedToArray","isOverflown","setIsOverflown","_useState3","_useState4","contentHeight","setContentHeight","handleScroll","scrollTop","classList","add","remove","scrollHeight","Math","ceil","clientHeight","floor","useEffect","trigger","hasOverflow","toggle","addEventListener","window","ResizeObserver","observe","Scroller","size","useRef","useElementScroll","ResponsiveEllipsis","responsiveHOC","LinesEllipsis","_ref$lines","lines","maxLine","ellipsis","trimRight","basedOn","_ref$sidePadding","sidePadding","elRef","Body","_ref$flex","Header","disabled","WidgetHeader","Nav","appointments","id","jpg","pat1jpg","webp","pat1webp","doc2jpg","doc2webp","Date","phone","pat2jpg","pat2webp","pat4jpg","pat4webp","doc1jpg","doc1webp","pat3jpg","pat3webp","doc3jpg","doc3webp","pat6jpg","pat6webp","pat5jpg","pat5webp","pat9jpg","pat9webp","array","index","setIndex","navigate","direction","currentTarget","dataset","length","topRef","bottomRef","topHeight","bottomHeight","period","setPeriod","setPeriodIndex","mainSwiper","setMainSwiper","dateSwiper","setDateSwiper","useInterfaceContext","config","effect","fadeEffect","crossFade","modules","EffectFade","Thumbs","loop","dir","speed","changeLanguageDirection","update","Widget","WidgetNav","slideNext","slidePrev","WidgetBody","paddingBottom","Swiper","onSwiper","swiper","thumbs","SwiperSlide","SlideContent","marginBottom","watchSlidesProgress","Test","useWindowSize","setSwiper","test","IconLink","Pill","width","RangePickerWrapper","widgetShadow","upcoming","toDate","pat10jpg","pat10webp","subtract","visible","setVisible","selectedDate","setSelectedDate","anchorRef","headerRef","useContentHeight","filter","appointment","isSame","sort","b","diff","mobile","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","open","onChange","newValue","PopperProps","anchorEl","PaperProps","onClose","disablePast","renderInput","inputProps","toISOString","placeholder","shouldDisableDate","day","ScrollContainer","AppointmentItem","NoDataPlaceholder","listRef","drawLabels","labels","i","push","_useArrayNav","useArrayNav","scrollTo","shadow","innerRef","activationDistance","component","LabeledProgress","azure","new","returned","setTooltip","isMobile","matchMedia","matches","padding","overflow","ResponsiveContainer","AreaChart","margin","x1","y1","x2","y2","gradientUnits","offset","stopColor","stopOpacity","Area","stroke","strokeWidth","fill","activeDot","r","onMouseOver","Tooltip","cursor","content","ChartTooltip","LegendList","LegendItem","fadePresence","Timestamp","getStyledTheme","options","setValue","transitionEnabled","setTransitionEnabled","setTimeout","Tabs","event","display","alignItems","gap","fontSize","minHeight","minWidth","lineHeight","textTransform","fontFamily","fontWeight","widgetBg","option","Tab","SwipeableViews","onChangeIndex","animateTransitions","RecentQuestionsItem","Page","NextPatient","LaboratoryTests","UpcomingAppointments","DoctorOverallAppointment","PatientsPace","RecentQuestions","ConfirmedDiagnoses","nav","Block","Text","progress","goal","confirmedPalette","_ref2","_ref2$short","short","confirmed","year","month","week","_usePeriodNav","PeriodNav","ConfirmedDiagnosesList"],"sourceRoot":""}